// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema Tenant
 */
export class Tenant extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Tenant"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'minio.min.io/v2',
    kind: 'Tenant',
  }

  /**
   * Renders a Kubernetes manifest for "Tenant".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TenantProps): any {
    return {
      ...Tenant.GVK,
      ...toJson_TenantProps(props),
    };
  }

  /**
   * Defines a "Tenant" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TenantProps) {
    super(scope, id, {
      ...Tenant.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...Tenant.GVK,
      ...toJson_TenantProps(resolved),
    };
  }
}

/**
 * @schema Tenant
 */
export interface TenantProps {
  /**
   * @schema Tenant#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema Tenant#scheduler
   */
  readonly scheduler?: TenantScheduler;

  /**
   * @schema Tenant#spec
   */
  readonly spec: TenantSpec;

}

/**
 * Converts an object of type 'TenantProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantProps(obj: TenantProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'scheduler': toJson_TenantScheduler(obj.scheduler),
    'spec': toJson_TenantSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantScheduler
 */
export interface TenantScheduler {
  /**
   * @schema TenantScheduler#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantScheduler' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantScheduler(obj: TenantScheduler | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpec
 */
export interface TenantSpec {
  /**
   * @schema TenantSpec#additionalVolumeMounts
   */
  readonly additionalVolumeMounts?: TenantSpecAdditionalVolumeMounts[];

  /**
   * @schema TenantSpec#additionalVolumes
   */
  readonly additionalVolumes?: TenantSpecAdditionalVolumes[];

  /**
   * @schema TenantSpec#buckets
   */
  readonly buckets?: TenantSpecBuckets[];

  /**
   * @schema TenantSpec#certConfig
   */
  readonly certConfig?: TenantSpecCertConfig;

  /**
   * @schema TenantSpec#configuration
   */
  readonly configuration?: TenantSpecConfiguration;

  /**
   * @schema TenantSpec#credsSecret
   */
  readonly credsSecret?: TenantSpecCredsSecret;

  /**
   * @schema TenantSpec#env
   */
  readonly env?: TenantSpecEnv[];

  /**
   * @schema TenantSpec#exposeServices
   */
  readonly exposeServices?: TenantSpecExposeServices;

  /**
   * @schema TenantSpec#externalCaCertSecret
   */
  readonly externalCaCertSecret?: TenantSpecExternalCaCertSecret[];

  /**
   * @schema TenantSpec#externalCertSecret
   */
  readonly externalCertSecret?: TenantSpecExternalCertSecret[];

  /**
   * @schema TenantSpec#externalClientCertSecret
   */
  readonly externalClientCertSecret?: TenantSpecExternalClientCertSecret;

  /**
   * @schema TenantSpec#externalClientCertSecrets
   */
  readonly externalClientCertSecrets?: TenantSpecExternalClientCertSecrets[];

  /**
   * @schema TenantSpec#features
   */
  readonly features?: TenantSpecFeatures;

  /**
   * @schema TenantSpec#image
   */
  readonly image?: string;

  /**
   * @schema TenantSpec#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema TenantSpec#imagePullSecret
   */
  readonly imagePullSecret?: TenantSpecImagePullSecret;

  /**
   * @schema TenantSpec#initContainers
   */
  readonly initContainers?: TenantSpecInitContainers[];

  /**
   * @schema TenantSpec#kes
   */
  readonly kes?: TenantSpecKes;

  /**
   * @schema TenantSpec#lifecycle
   */
  readonly lifecycle?: TenantSpecLifecycle;

  /**
   * @schema TenantSpec#liveness
   */
  readonly liveness?: TenantSpecLiveness;

  /**
   * @schema TenantSpec#logging
   */
  readonly logging?: TenantSpecLogging;

  /**
   * @schema TenantSpec#mountPath
   */
  readonly mountPath?: string;

  /**
   * @schema TenantSpec#podManagementPolicy
   */
  readonly podManagementPolicy?: string;

  /**
   * @schema TenantSpec#pools
   */
  readonly pools: TenantSpecPools[];

  /**
   * @schema TenantSpec#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * @schema TenantSpec#prometheusOperator
   */
  readonly prometheusOperator?: boolean;

  /**
   * @schema TenantSpec#readiness
   */
  readonly readiness?: TenantSpecReadiness;

  /**
   * @schema TenantSpec#requestAutoCert
   */
  readonly requestAutoCert?: boolean;

  /**
   * @schema TenantSpec#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema TenantSpec#serviceMetadata
   */
  readonly serviceMetadata?: TenantSpecServiceMetadata;

  /**
   * @schema TenantSpec#sideCars
   */
  readonly sideCars?: TenantSpecSideCars;

  /**
   * @schema TenantSpec#startup
   */
  readonly startup?: TenantSpecStartup;

  /**
   * @schema TenantSpec#subPath
   */
  readonly subPath?: string;

  /**
   * @schema TenantSpec#users
   */
  readonly users?: TenantSpecUsers[];

}

/**
 * Converts an object of type 'TenantSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpec(obj: TenantSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'additionalVolumeMounts': obj.additionalVolumeMounts?.map(y => toJson_TenantSpecAdditionalVolumeMounts(y)),
    'additionalVolumes': obj.additionalVolumes?.map(y => toJson_TenantSpecAdditionalVolumes(y)),
    'buckets': obj.buckets?.map(y => toJson_TenantSpecBuckets(y)),
    'certConfig': toJson_TenantSpecCertConfig(obj.certConfig),
    'configuration': toJson_TenantSpecConfiguration(obj.configuration),
    'credsSecret': toJson_TenantSpecCredsSecret(obj.credsSecret),
    'env': obj.env?.map(y => toJson_TenantSpecEnv(y)),
    'exposeServices': toJson_TenantSpecExposeServices(obj.exposeServices),
    'externalCaCertSecret': obj.externalCaCertSecret?.map(y => toJson_TenantSpecExternalCaCertSecret(y)),
    'externalCertSecret': obj.externalCertSecret?.map(y => toJson_TenantSpecExternalCertSecret(y)),
    'externalClientCertSecret': toJson_TenantSpecExternalClientCertSecret(obj.externalClientCertSecret),
    'externalClientCertSecrets': obj.externalClientCertSecrets?.map(y => toJson_TenantSpecExternalClientCertSecrets(y)),
    'features': toJson_TenantSpecFeatures(obj.features),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'imagePullSecret': toJson_TenantSpecImagePullSecret(obj.imagePullSecret),
    'initContainers': obj.initContainers?.map(y => toJson_TenantSpecInitContainers(y)),
    'kes': toJson_TenantSpecKes(obj.kes),
    'lifecycle': toJson_TenantSpecLifecycle(obj.lifecycle),
    'liveness': toJson_TenantSpecLiveness(obj.liveness),
    'logging': toJson_TenantSpecLogging(obj.logging),
    'mountPath': obj.mountPath,
    'podManagementPolicy': obj.podManagementPolicy,
    'pools': obj.pools?.map(y => toJson_TenantSpecPools(y)),
    'priorityClassName': obj.priorityClassName,
    'prometheusOperator': obj.prometheusOperator,
    'readiness': toJson_TenantSpecReadiness(obj.readiness),
    'requestAutoCert': obj.requestAutoCert,
    'serviceAccountName': obj.serviceAccountName,
    'serviceMetadata': toJson_TenantSpecServiceMetadata(obj.serviceMetadata),
    'sideCars': toJson_TenantSpecSideCars(obj.sideCars),
    'startup': toJson_TenantSpecStartup(obj.startup),
    'subPath': obj.subPath,
    'users': obj.users?.map(y => toJson_TenantSpecUsers(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumeMounts
 */
export interface TenantSpecAdditionalVolumeMounts {
  /**
   * @schema TenantSpecAdditionalVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema TenantSpecAdditionalVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema TenantSpecAdditionalVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecAdditionalVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema TenantSpecAdditionalVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumeMounts(obj: TenantSpecAdditionalVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumes
 */
export interface TenantSpecAdditionalVolumes {
  /**
   * @schema TenantSpecAdditionalVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: TenantSpecAdditionalVolumesAwsElasticBlockStore;

  /**
   * @schema TenantSpecAdditionalVolumes#azureDisk
   */
  readonly azureDisk?: TenantSpecAdditionalVolumesAzureDisk;

  /**
   * @schema TenantSpecAdditionalVolumes#azureFile
   */
  readonly azureFile?: TenantSpecAdditionalVolumesAzureFile;

  /**
   * @schema TenantSpecAdditionalVolumes#cephfs
   */
  readonly cephfs?: TenantSpecAdditionalVolumesCephfs;

  /**
   * @schema TenantSpecAdditionalVolumes#cinder
   */
  readonly cinder?: TenantSpecAdditionalVolumesCinder;

  /**
   * @schema TenantSpecAdditionalVolumes#configMap
   */
  readonly configMap?: TenantSpecAdditionalVolumesConfigMap;

  /**
   * @schema TenantSpecAdditionalVolumes#csi
   */
  readonly csi?: TenantSpecAdditionalVolumesCsi;

  /**
   * @schema TenantSpecAdditionalVolumes#downwardAPI
   */
  readonly downwardApi?: TenantSpecAdditionalVolumesDownwardApi;

  /**
   * @schema TenantSpecAdditionalVolumes#emptyDir
   */
  readonly emptyDir?: TenantSpecAdditionalVolumesEmptyDir;

  /**
   * @schema TenantSpecAdditionalVolumes#ephemeral
   */
  readonly ephemeral?: TenantSpecAdditionalVolumesEphemeral;

  /**
   * @schema TenantSpecAdditionalVolumes#fc
   */
  readonly fc?: TenantSpecAdditionalVolumesFc;

  /**
   * @schema TenantSpecAdditionalVolumes#flexVolume
   */
  readonly flexVolume?: TenantSpecAdditionalVolumesFlexVolume;

  /**
   * @schema TenantSpecAdditionalVolumes#flocker
   */
  readonly flocker?: TenantSpecAdditionalVolumesFlocker;

  /**
   * @schema TenantSpecAdditionalVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: TenantSpecAdditionalVolumesGcePersistentDisk;

  /**
   * @schema TenantSpecAdditionalVolumes#gitRepo
   */
  readonly gitRepo?: TenantSpecAdditionalVolumesGitRepo;

  /**
   * @schema TenantSpecAdditionalVolumes#glusterfs
   */
  readonly glusterfs?: TenantSpecAdditionalVolumesGlusterfs;

  /**
   * @schema TenantSpecAdditionalVolumes#hostPath
   */
  readonly hostPath?: TenantSpecAdditionalVolumesHostPath;

  /**
   * @schema TenantSpecAdditionalVolumes#iscsi
   */
  readonly iscsi?: TenantSpecAdditionalVolumesIscsi;

  /**
   * @schema TenantSpecAdditionalVolumes#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecAdditionalVolumes#nfs
   */
  readonly nfs?: TenantSpecAdditionalVolumesNfs;

  /**
   * @schema TenantSpecAdditionalVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: TenantSpecAdditionalVolumesPersistentVolumeClaim;

  /**
   * @schema TenantSpecAdditionalVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: TenantSpecAdditionalVolumesPhotonPersistentDisk;

  /**
   * @schema TenantSpecAdditionalVolumes#portworxVolume
   */
  readonly portworxVolume?: TenantSpecAdditionalVolumesPortworxVolume;

  /**
   * @schema TenantSpecAdditionalVolumes#projected
   */
  readonly projected?: TenantSpecAdditionalVolumesProjected;

  /**
   * @schema TenantSpecAdditionalVolumes#quobyte
   */
  readonly quobyte?: TenantSpecAdditionalVolumesQuobyte;

  /**
   * @schema TenantSpecAdditionalVolumes#rbd
   */
  readonly rbd?: TenantSpecAdditionalVolumesRbd;

  /**
   * @schema TenantSpecAdditionalVolumes#scaleIO
   */
  readonly scaleIo?: TenantSpecAdditionalVolumesScaleIo;

  /**
   * @schema TenantSpecAdditionalVolumes#secret
   */
  readonly secret?: TenantSpecAdditionalVolumesSecret;

  /**
   * @schema TenantSpecAdditionalVolumes#storageos
   */
  readonly storageos?: TenantSpecAdditionalVolumesStorageos;

  /**
   * @schema TenantSpecAdditionalVolumes#vsphereVolume
   */
  readonly vsphereVolume?: TenantSpecAdditionalVolumesVsphereVolume;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumes(obj: TenantSpecAdditionalVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_TenantSpecAdditionalVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_TenantSpecAdditionalVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_TenantSpecAdditionalVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_TenantSpecAdditionalVolumesCephfs(obj.cephfs),
    'cinder': toJson_TenantSpecAdditionalVolumesCinder(obj.cinder),
    'configMap': toJson_TenantSpecAdditionalVolumesConfigMap(obj.configMap),
    'csi': toJson_TenantSpecAdditionalVolumesCsi(obj.csi),
    'downwardAPI': toJson_TenantSpecAdditionalVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_TenantSpecAdditionalVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_TenantSpecAdditionalVolumesEphemeral(obj.ephemeral),
    'fc': toJson_TenantSpecAdditionalVolumesFc(obj.fc),
    'flexVolume': toJson_TenantSpecAdditionalVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_TenantSpecAdditionalVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_TenantSpecAdditionalVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_TenantSpecAdditionalVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_TenantSpecAdditionalVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_TenantSpecAdditionalVolumesHostPath(obj.hostPath),
    'iscsi': toJson_TenantSpecAdditionalVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_TenantSpecAdditionalVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_TenantSpecAdditionalVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_TenantSpecAdditionalVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_TenantSpecAdditionalVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_TenantSpecAdditionalVolumesProjected(obj.projected),
    'quobyte': toJson_TenantSpecAdditionalVolumesQuobyte(obj.quobyte),
    'rbd': toJson_TenantSpecAdditionalVolumesRbd(obj.rbd),
    'scaleIO': toJson_TenantSpecAdditionalVolumesScaleIo(obj.scaleIo),
    'secret': toJson_TenantSpecAdditionalVolumesSecret(obj.secret),
    'storageos': toJson_TenantSpecAdditionalVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_TenantSpecAdditionalVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecBuckets
 */
export interface TenantSpecBuckets {
  /**
   * @schema TenantSpecBuckets#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecBuckets#objectLock
   */
  readonly objectLock?: boolean;

  /**
   * @schema TenantSpecBuckets#region
   */
  readonly region?: string;

}

/**
 * Converts an object of type 'TenantSpecBuckets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecBuckets(obj: TenantSpecBuckets | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'objectLock': obj.objectLock,
    'region': obj.region,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecCertConfig
 */
export interface TenantSpecCertConfig {
  /**
   * @schema TenantSpecCertConfig#commonName
   */
  readonly commonName?: string;

  /**
   * @schema TenantSpecCertConfig#dnsNames
   */
  readonly dnsNames?: string[];

  /**
   * @schema TenantSpecCertConfig#organizationName
   */
  readonly organizationName?: string[];

}

/**
 * Converts an object of type 'TenantSpecCertConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecCertConfig(obj: TenantSpecCertConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'commonName': obj.commonName,
    'dnsNames': obj.dnsNames?.map(y => y),
    'organizationName': obj.organizationName?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecConfiguration
 */
export interface TenantSpecConfiguration {
  /**
   * @schema TenantSpecConfiguration#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecConfiguration' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecConfiguration(obj: TenantSpecConfiguration | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecCredsSecret
 */
export interface TenantSpecCredsSecret {
  /**
   * @schema TenantSpecCredsSecret#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecCredsSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecCredsSecret(obj: TenantSpecCredsSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecEnv
 */
export interface TenantSpecEnv {
  /**
   * @schema TenantSpecEnv#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecEnv#value
   */
  readonly value?: string;

  /**
   * @schema TenantSpecEnv#valueFrom
   */
  readonly valueFrom?: TenantSpecEnvValueFrom;

}

/**
 * Converts an object of type 'TenantSpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecEnv(obj: TenantSpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_TenantSpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecExposeServices
 */
export interface TenantSpecExposeServices {
  /**
   * @schema TenantSpecExposeServices#console
   */
  readonly console?: boolean;

  /**
   * @schema TenantSpecExposeServices#minio
   */
  readonly minio?: boolean;

}

/**
 * Converts an object of type 'TenantSpecExposeServices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecExposeServices(obj: TenantSpecExposeServices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'console': obj.console,
    'minio': obj.minio,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecExternalCaCertSecret
 */
export interface TenantSpecExternalCaCertSecret {
  /**
   * @schema TenantSpecExternalCaCertSecret#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecExternalCaCertSecret#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecExternalCaCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecExternalCaCertSecret(obj: TenantSpecExternalCaCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecExternalCertSecret
 */
export interface TenantSpecExternalCertSecret {
  /**
   * @schema TenantSpecExternalCertSecret#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecExternalCertSecret#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecExternalCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecExternalCertSecret(obj: TenantSpecExternalCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecExternalClientCertSecret
 */
export interface TenantSpecExternalClientCertSecret {
  /**
   * @schema TenantSpecExternalClientCertSecret#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecExternalClientCertSecret#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecExternalClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecExternalClientCertSecret(obj: TenantSpecExternalClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecExternalClientCertSecrets
 */
export interface TenantSpecExternalClientCertSecrets {
  /**
   * @schema TenantSpecExternalClientCertSecrets#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecExternalClientCertSecrets#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecExternalClientCertSecrets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecExternalClientCertSecrets(obj: TenantSpecExternalClientCertSecrets | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecFeatures
 */
export interface TenantSpecFeatures {
  /**
   * @schema TenantSpecFeatures#bucketDNS
   */
  readonly bucketDns?: boolean;

  /**
   * @schema TenantSpecFeatures#domains
   */
  readonly domains?: TenantSpecFeaturesDomains;

  /**
   * @schema TenantSpecFeatures#enableSFTP
   */
  readonly enableSftp?: boolean;

}

/**
 * Converts an object of type 'TenantSpecFeatures' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecFeatures(obj: TenantSpecFeatures | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucketDNS': obj.bucketDns,
    'domains': toJson_TenantSpecFeaturesDomains(obj.domains),
    'enableSFTP': obj.enableSftp,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecImagePullSecret
 */
export interface TenantSpecImagePullSecret {
  /**
   * @schema TenantSpecImagePullSecret#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecImagePullSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecImagePullSecret(obj: TenantSpecImagePullSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainers
 */
export interface TenantSpecInitContainers {
  /**
   * @schema TenantSpecInitContainers#args
   */
  readonly args?: string[];

  /**
   * @schema TenantSpecInitContainers#command
   */
  readonly command?: string[];

  /**
   * @schema TenantSpecInitContainers#env
   */
  readonly env?: TenantSpecInitContainersEnv[];

  /**
   * @schema TenantSpecInitContainers#envFrom
   */
  readonly envFrom?: TenantSpecInitContainersEnvFrom[];

  /**
   * @schema TenantSpecInitContainers#image
   */
  readonly image?: string;

  /**
   * @schema TenantSpecInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema TenantSpecInitContainers#lifecycle
   */
  readonly lifecycle?: TenantSpecInitContainersLifecycle;

  /**
   * @schema TenantSpecInitContainers#livenessProbe
   */
  readonly livenessProbe?: TenantSpecInitContainersLivenessProbe;

  /**
   * @schema TenantSpecInitContainers#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainers#ports
   */
  readonly ports?: TenantSpecInitContainersPorts[];

  /**
   * @schema TenantSpecInitContainers#readinessProbe
   */
  readonly readinessProbe?: TenantSpecInitContainersReadinessProbe;

  /**
   * @schema TenantSpecInitContainers#resizePolicy
   */
  readonly resizePolicy?: TenantSpecInitContainersResizePolicy[];

  /**
   * @schema TenantSpecInitContainers#resources
   */
  readonly resources?: TenantSpecInitContainersResources;

  /**
   * @schema TenantSpecInitContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema TenantSpecInitContainers#securityContext
   */
  readonly securityContext?: TenantSpecInitContainersSecurityContext;

  /**
   * @schema TenantSpecInitContainers#startupProbe
   */
  readonly startupProbe?: TenantSpecInitContainersStartupProbe;

  /**
   * @schema TenantSpecInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema TenantSpecInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema TenantSpecInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema TenantSpecInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema TenantSpecInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema TenantSpecInitContainers#volumeDevices
   */
  readonly volumeDevices?: TenantSpecInitContainersVolumeDevices[];

  /**
   * @schema TenantSpecInitContainers#volumeMounts
   */
  readonly volumeMounts?: TenantSpecInitContainersVolumeMounts[];

  /**
   * @schema TenantSpecInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainers(obj: TenantSpecInitContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_TenantSpecInitContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_TenantSpecInitContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_TenantSpecInitContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_TenantSpecInitContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_TenantSpecInitContainersPorts(y)),
    'readinessProbe': toJson_TenantSpecInitContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_TenantSpecInitContainersResizePolicy(y)),
    'resources': toJson_TenantSpecInitContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_TenantSpecInitContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_TenantSpecInitContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_TenantSpecInitContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_TenantSpecInitContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKes
 */
export interface TenantSpecKes {
  /**
   * @schema TenantSpecKes#affinity
   */
  readonly affinity?: TenantSpecKesAffinity;

  /**
   * @schema TenantSpecKes#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema TenantSpecKes#clientCertSecret
   */
  readonly clientCertSecret?: TenantSpecKesClientCertSecret;

  /**
   * @schema TenantSpecKes#containerSecurityContext
   */
  readonly containerSecurityContext?: TenantSpecKesContainerSecurityContext;

  /**
   * @schema TenantSpecKes#env
   */
  readonly env?: TenantSpecKesEnv[];

  /**
   * @schema TenantSpecKes#externalCertSecret
   */
  readonly externalCertSecret?: TenantSpecKesExternalCertSecret;

  /**
   * @schema TenantSpecKes#gcpCredentialSecretName
   */
  readonly gcpCredentialSecretName?: string;

  /**
   * @schema TenantSpecKes#gcpWorkloadIdentityPool
   */
  readonly gcpWorkloadIdentityPool?: string;

  /**
   * @schema TenantSpecKes#image
   */
  readonly image?: string;

  /**
   * @schema TenantSpecKes#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema TenantSpecKes#kesSecret
   */
  readonly kesSecret: TenantSpecKesKesSecret;

  /**
   * @schema TenantSpecKes#keyName
   */
  readonly keyName?: string;

  /**
   * @schema TenantSpecKes#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema TenantSpecKes#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema TenantSpecKes#replicas
   */
  readonly replicas?: number;

  /**
   * @schema TenantSpecKes#resources
   */
  readonly resources?: TenantSpecKesResources;

  /**
   * @schema TenantSpecKes#securityContext
   */
  readonly securityContext?: TenantSpecKesSecurityContext;

  /**
   * @schema TenantSpecKes#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema TenantSpecKes#tolerations
   */
  readonly tolerations?: TenantSpecKesTolerations[];

  /**
   * @schema TenantSpecKes#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: TenantSpecKesTopologySpreadConstraints[];

}

/**
 * Converts an object of type 'TenantSpecKes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKes(obj: TenantSpecKes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_TenantSpecKesAffinity(obj.affinity),
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'clientCertSecret': toJson_TenantSpecKesClientCertSecret(obj.clientCertSecret),
    'containerSecurityContext': toJson_TenantSpecKesContainerSecurityContext(obj.containerSecurityContext),
    'env': obj.env?.map(y => toJson_TenantSpecKesEnv(y)),
    'externalCertSecret': toJson_TenantSpecKesExternalCertSecret(obj.externalCertSecret),
    'gcpCredentialSecretName': obj.gcpCredentialSecretName,
    'gcpWorkloadIdentityPool': obj.gcpWorkloadIdentityPool,
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'kesSecret': toJson_TenantSpecKesKesSecret(obj.kesSecret),
    'keyName': obj.keyName,
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'replicas': obj.replicas,
    'resources': toJson_TenantSpecKesResources(obj.resources),
    'securityContext': toJson_TenantSpecKesSecurityContext(obj.securityContext),
    'serviceAccountName': obj.serviceAccountName,
    'tolerations': obj.tolerations?.map(y => toJson_TenantSpecKesTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_TenantSpecKesTopologySpreadConstraints(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecycle
 */
export interface TenantSpecLifecycle {
  /**
   * @schema TenantSpecLifecycle#postStart
   */
  readonly postStart?: TenantSpecLifecyclePostStart;

  /**
   * @schema TenantSpecLifecycle#preStop
   */
  readonly preStop?: TenantSpecLifecyclePreStop;

}

/**
 * Converts an object of type 'TenantSpecLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecycle(obj: TenantSpecLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_TenantSpecLifecyclePostStart(obj.postStart),
    'preStop': toJson_TenantSpecLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLiveness
 */
export interface TenantSpecLiveness {
  /**
   * @schema TenantSpecLiveness#exec
   */
  readonly exec?: TenantSpecLivenessExec;

  /**
   * @schema TenantSpecLiveness#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecLiveness#grpc
   */
  readonly grpc?: TenantSpecLivenessGrpc;

  /**
   * @schema TenantSpecLiveness#httpGet
   */
  readonly httpGet?: TenantSpecLivenessHttpGet;

  /**
   * @schema TenantSpecLiveness#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecLiveness#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecLiveness#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecLiveness#tcpSocket
   */
  readonly tcpSocket?: TenantSpecLivenessTcpSocket;

  /**
   * @schema TenantSpecLiveness#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecLiveness#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecLiveness' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLiveness(obj: TenantSpecLiveness | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecLivenessExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecLivenessGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecLivenessHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecLivenessTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLogging
 */
export interface TenantSpecLogging {
  /**
   * @schema TenantSpecLogging#anonymous
   */
  readonly anonymous?: boolean;

  /**
   * @schema TenantSpecLogging#json
   */
  readonly json?: boolean;

  /**
   * @schema TenantSpecLogging#quiet
   */
  readonly quiet?: boolean;

}

/**
 * Converts an object of type 'TenantSpecLogging' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLogging(obj: TenantSpecLogging | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'anonymous': obj.anonymous,
    'json': obj.json,
    'quiet': obj.quiet,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPools
 */
export interface TenantSpecPools {
  /**
   * @schema TenantSpecPools#affinity
   */
  readonly affinity?: TenantSpecPoolsAffinity;

  /**
   * @schema TenantSpecPools#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema TenantSpecPools#containerSecurityContext
   */
  readonly containerSecurityContext?: TenantSpecPoolsContainerSecurityContext;

  /**
   * @schema TenantSpecPools#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema TenantSpecPools#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecPools#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * @schema TenantSpecPools#reclaimStorage
   */
  readonly reclaimStorage?: boolean;

  /**
   * @schema TenantSpecPools#resources
   */
  readonly resources?: TenantSpecPoolsResources;

  /**
   * @schema TenantSpecPools#runtimeClassName
   */
  readonly runtimeClassName?: string;

  /**
   * @schema TenantSpecPools#securityContext
   */
  readonly securityContext?: TenantSpecPoolsSecurityContext;

  /**
   * @schema TenantSpecPools#servers
   */
  readonly servers: number;

  /**
   * @schema TenantSpecPools#tolerations
   */
  readonly tolerations?: TenantSpecPoolsTolerations[];

  /**
   * @schema TenantSpecPools#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: TenantSpecPoolsTopologySpreadConstraints[];

  /**
   * @schema TenantSpecPools#volumeClaimTemplate
   */
  readonly volumeClaimTemplate: TenantSpecPoolsVolumeClaimTemplate;

  /**
   * @schema TenantSpecPools#volumesPerServer
   */
  readonly volumesPerServer: number;

}

/**
 * Converts an object of type 'TenantSpecPools' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPools(obj: TenantSpecPools | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affinity': toJson_TenantSpecPoolsAffinity(obj.affinity),
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'containerSecurityContext': toJson_TenantSpecPoolsContainerSecurityContext(obj.containerSecurityContext),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'reclaimStorage': obj.reclaimStorage,
    'resources': toJson_TenantSpecPoolsResources(obj.resources),
    'runtimeClassName': obj.runtimeClassName,
    'securityContext': toJson_TenantSpecPoolsSecurityContext(obj.securityContext),
    'servers': obj.servers,
    'tolerations': obj.tolerations?.map(y => toJson_TenantSpecPoolsTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_TenantSpecPoolsTopologySpreadConstraints(y)),
    'volumeClaimTemplate': toJson_TenantSpecPoolsVolumeClaimTemplate(obj.volumeClaimTemplate),
    'volumesPerServer': obj.volumesPerServer,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecReadiness
 */
export interface TenantSpecReadiness {
  /**
   * @schema TenantSpecReadiness#exec
   */
  readonly exec?: TenantSpecReadinessExec;

  /**
   * @schema TenantSpecReadiness#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecReadiness#grpc
   */
  readonly grpc?: TenantSpecReadinessGrpc;

  /**
   * @schema TenantSpecReadiness#httpGet
   */
  readonly httpGet?: TenantSpecReadinessHttpGet;

  /**
   * @schema TenantSpecReadiness#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecReadiness#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecReadiness#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecReadiness#tcpSocket
   */
  readonly tcpSocket?: TenantSpecReadinessTcpSocket;

  /**
   * @schema TenantSpecReadiness#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecReadiness#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecReadiness' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecReadiness(obj: TenantSpecReadiness | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecReadinessExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecReadinessGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecReadinessHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecReadinessTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecServiceMetadata
 */
export interface TenantSpecServiceMetadata {
  /**
   * @schema TenantSpecServiceMetadata#consoleServiceAnnotations
   */
  readonly consoleServiceAnnotations?: { [key: string]: string };

  /**
   * @schema TenantSpecServiceMetadata#consoleServiceLabels
   */
  readonly consoleServiceLabels?: { [key: string]: string };

  /**
   * @schema TenantSpecServiceMetadata#minioServiceAnnotations
   */
  readonly minioServiceAnnotations?: { [key: string]: string };

  /**
   * @schema TenantSpecServiceMetadata#minioServiceLabels
   */
  readonly minioServiceLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecServiceMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecServiceMetadata(obj: TenantSpecServiceMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'consoleServiceAnnotations': ((obj.consoleServiceAnnotations) === undefined) ? undefined : (Object.entries(obj.consoleServiceAnnotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'consoleServiceLabels': ((obj.consoleServiceLabels) === undefined) ? undefined : (Object.entries(obj.consoleServiceLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'minioServiceAnnotations': ((obj.minioServiceAnnotations) === undefined) ? undefined : (Object.entries(obj.minioServiceAnnotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'minioServiceLabels': ((obj.minioServiceLabels) === undefined) ? undefined : (Object.entries(obj.minioServiceLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCars
 */
export interface TenantSpecSideCars {
  /**
   * @schema TenantSpecSideCars#containers
   */
  readonly containers?: TenantSpecSideCarsContainers[];

  /**
   * @schema TenantSpecSideCars#resources
   */
  readonly resources?: TenantSpecSideCarsResources;

  /**
   * @schema TenantSpecSideCars#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: TenantSpecSideCarsVolumeClaimTemplates[];

  /**
   * @schema TenantSpecSideCars#volumes
   */
  readonly volumes?: TenantSpecSideCarsVolumes[];

}

/**
 * Converts an object of type 'TenantSpecSideCars' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCars(obj: TenantSpecSideCars | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containers': obj.containers?.map(y => toJson_TenantSpecSideCarsContainers(y)),
    'resources': toJson_TenantSpecSideCarsResources(obj.resources),
    'volumeClaimTemplates': obj.volumeClaimTemplates?.map(y => toJson_TenantSpecSideCarsVolumeClaimTemplates(y)),
    'volumes': obj.volumes?.map(y => toJson_TenantSpecSideCarsVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecStartup
 */
export interface TenantSpecStartup {
  /**
   * @schema TenantSpecStartup#exec
   */
  readonly exec?: TenantSpecStartupExec;

  /**
   * @schema TenantSpecStartup#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecStartup#grpc
   */
  readonly grpc?: TenantSpecStartupGrpc;

  /**
   * @schema TenantSpecStartup#httpGet
   */
  readonly httpGet?: TenantSpecStartupHttpGet;

  /**
   * @schema TenantSpecStartup#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecStartup#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecStartup#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecStartup#tcpSocket
   */
  readonly tcpSocket?: TenantSpecStartupTcpSocket;

  /**
   * @schema TenantSpecStartup#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecStartup#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecStartup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecStartup(obj: TenantSpecStartup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecStartupExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecStartupGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecStartupHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecStartupTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecUsers
 */
export interface TenantSpecUsers {
  /**
   * @schema TenantSpecUsers#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecUsers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecUsers(obj: TenantSpecUsers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesAwsElasticBlockStore
 */
export interface TenantSpecAdditionalVolumesAwsElasticBlockStore {
  /**
   * @schema TenantSpecAdditionalVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema TenantSpecAdditionalVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesAwsElasticBlockStore(obj: TenantSpecAdditionalVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesAzureDisk
 */
export interface TenantSpecAdditionalVolumesAzureDisk {
  /**
   * @schema TenantSpecAdditionalVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema TenantSpecAdditionalVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema TenantSpecAdditionalVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema TenantSpecAdditionalVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema TenantSpecAdditionalVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesAzureDisk(obj: TenantSpecAdditionalVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesAzureFile
 */
export interface TenantSpecAdditionalVolumesAzureFile {
  /**
   * @schema TenantSpecAdditionalVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema TenantSpecAdditionalVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesAzureFile(obj: TenantSpecAdditionalVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesCephfs
 */
export interface TenantSpecAdditionalVolumesCephfs {
  /**
   * @schema TenantSpecAdditionalVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema TenantSpecAdditionalVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecAdditionalVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema TenantSpecAdditionalVolumesCephfs#secretRef
   */
  readonly secretRef?: TenantSpecAdditionalVolumesCephfsSecretRef;

  /**
   * @schema TenantSpecAdditionalVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesCephfs(obj: TenantSpecAdditionalVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_TenantSpecAdditionalVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesCinder
 */
export interface TenantSpecAdditionalVolumesCinder {
  /**
   * @schema TenantSpecAdditionalVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesCinder#secretRef
   */
  readonly secretRef?: TenantSpecAdditionalVolumesCinderSecretRef;

  /**
   * @schema TenantSpecAdditionalVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesCinder(obj: TenantSpecAdditionalVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecAdditionalVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesConfigMap
 */
export interface TenantSpecAdditionalVolumesConfigMap {
  /**
   * @schema TenantSpecAdditionalVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesConfigMap#items
   */
  readonly items?: TenantSpecAdditionalVolumesConfigMapItems[];

  /**
   * @schema TenantSpecAdditionalVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecAdditionalVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesConfigMap(obj: TenantSpecAdditionalVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TenantSpecAdditionalVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesCsi
 */
export interface TenantSpecAdditionalVolumesCsi {
  /**
   * @schema TenantSpecAdditionalVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema TenantSpecAdditionalVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: TenantSpecAdditionalVolumesCsiNodePublishSecretRef;

  /**
   * @schema TenantSpecAdditionalVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesCsi(obj: TenantSpecAdditionalVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_TenantSpecAdditionalVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesDownwardApi
 */
export interface TenantSpecAdditionalVolumesDownwardApi {
  /**
   * @schema TenantSpecAdditionalVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesDownwardApi#items
   */
  readonly items?: TenantSpecAdditionalVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesDownwardApi(obj: TenantSpecAdditionalVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TenantSpecAdditionalVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEmptyDir
 */
export interface TenantSpecAdditionalVolumesEmptyDir {
  /**
   * @schema TenantSpecAdditionalVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema TenantSpecAdditionalVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: TenantSpecAdditionalVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEmptyDir(obj: TenantSpecAdditionalVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEphemeral
 */
export interface TenantSpecAdditionalVolumesEphemeral {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeral(obj: TenantSpecAdditionalVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesFc
 */
export interface TenantSpecAdditionalVolumesFc {
  /**
   * @schema TenantSpecAdditionalVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema TenantSpecAdditionalVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema TenantSpecAdditionalVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesFc(obj: TenantSpecAdditionalVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesFlexVolume
 */
export interface TenantSpecAdditionalVolumesFlexVolume {
  /**
   * @schema TenantSpecAdditionalVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema TenantSpecAdditionalVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema TenantSpecAdditionalVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesFlexVolume#secretRef
   */
  readonly secretRef?: TenantSpecAdditionalVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesFlexVolume(obj: TenantSpecAdditionalVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecAdditionalVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesFlocker
 */
export interface TenantSpecAdditionalVolumesFlocker {
  /**
   * @schema TenantSpecAdditionalVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesFlocker(obj: TenantSpecAdditionalVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesGcePersistentDisk
 */
export interface TenantSpecAdditionalVolumesGcePersistentDisk {
  /**
   * @schema TenantSpecAdditionalVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema TenantSpecAdditionalVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema TenantSpecAdditionalVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesGcePersistentDisk(obj: TenantSpecAdditionalVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesGitRepo
 */
export interface TenantSpecAdditionalVolumesGitRepo {
  /**
   * @schema TenantSpecAdditionalVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema TenantSpecAdditionalVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema TenantSpecAdditionalVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesGitRepo(obj: TenantSpecAdditionalVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesGlusterfs
 */
export interface TenantSpecAdditionalVolumesGlusterfs {
  /**
   * @schema TenantSpecAdditionalVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema TenantSpecAdditionalVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecAdditionalVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesGlusterfs(obj: TenantSpecAdditionalVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesHostPath
 */
export interface TenantSpecAdditionalVolumesHostPath {
  /**
   * @schema TenantSpecAdditionalVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecAdditionalVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesHostPath(obj: TenantSpecAdditionalVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesIscsi
 */
export interface TenantSpecAdditionalVolumesIscsi {
  /**
   * @schema TenantSpecAdditionalVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#secretRef
   */
  readonly secretRef?: TenantSpecAdditionalVolumesIscsiSecretRef;

  /**
   * @schema TenantSpecAdditionalVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesIscsi(obj: TenantSpecAdditionalVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecAdditionalVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesNfs
 */
export interface TenantSpecAdditionalVolumesNfs {
  /**
   * @schema TenantSpecAdditionalVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecAdditionalVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesNfs(obj: TenantSpecAdditionalVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesPersistentVolumeClaim
 */
export interface TenantSpecAdditionalVolumesPersistentVolumeClaim {
  /**
   * @schema TenantSpecAdditionalVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema TenantSpecAdditionalVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesPersistentVolumeClaim(obj: TenantSpecAdditionalVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesPhotonPersistentDisk
 */
export interface TenantSpecAdditionalVolumesPhotonPersistentDisk {
  /**
   * @schema TenantSpecAdditionalVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesPhotonPersistentDisk(obj: TenantSpecAdditionalVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesPortworxVolume
 */
export interface TenantSpecAdditionalVolumesPortworxVolume {
  /**
   * @schema TenantSpecAdditionalVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesPortworxVolume(obj: TenantSpecAdditionalVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjected
 */
export interface TenantSpecAdditionalVolumesProjected {
  /**
   * @schema TenantSpecAdditionalVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesProjected#sources
   */
  readonly sources?: TenantSpecAdditionalVolumesProjectedSources[];

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjected(obj: TenantSpecAdditionalVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_TenantSpecAdditionalVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesQuobyte
 */
export interface TenantSpecAdditionalVolumesQuobyte {
  /**
   * @schema TenantSpecAdditionalVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema TenantSpecAdditionalVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema TenantSpecAdditionalVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema TenantSpecAdditionalVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema TenantSpecAdditionalVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesQuobyte(obj: TenantSpecAdditionalVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesRbd
 */
export interface TenantSpecAdditionalVolumesRbd {
  /**
   * @schema TenantSpecAdditionalVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema TenantSpecAdditionalVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema TenantSpecAdditionalVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema TenantSpecAdditionalVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema TenantSpecAdditionalVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesRbd#secretRef
   */
  readonly secretRef?: TenantSpecAdditionalVolumesRbdSecretRef;

  /**
   * @schema TenantSpecAdditionalVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesRbd(obj: TenantSpecAdditionalVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecAdditionalVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesScaleIo
 */
export interface TenantSpecAdditionalVolumesScaleIo {
  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#secretRef
   */
  readonly secretRef: TenantSpecAdditionalVolumesScaleIoSecretRef;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema TenantSpecAdditionalVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesScaleIo(obj: TenantSpecAdditionalVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecAdditionalVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesSecret
 */
export interface TenantSpecAdditionalVolumesSecret {
  /**
   * @schema TenantSpecAdditionalVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesSecret#items
   */
  readonly items?: TenantSpecAdditionalVolumesSecretItems[];

  /**
   * @schema TenantSpecAdditionalVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesSecret(obj: TenantSpecAdditionalVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TenantSpecAdditionalVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesStorageos
 */
export interface TenantSpecAdditionalVolumesStorageos {
  /**
   * @schema TenantSpecAdditionalVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesStorageos#secretRef
   */
  readonly secretRef?: TenantSpecAdditionalVolumesStorageosSecretRef;

  /**
   * @schema TenantSpecAdditionalVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesStorageos(obj: TenantSpecAdditionalVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecAdditionalVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesVsphereVolume
 */
export interface TenantSpecAdditionalVolumesVsphereVolume {
  /**
   * @schema TenantSpecAdditionalVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecAdditionalVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema TenantSpecAdditionalVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesVsphereVolume(obj: TenantSpecAdditionalVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecEnvValueFrom
 */
export interface TenantSpecEnvValueFrom {
  /**
   * @schema TenantSpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: TenantSpecEnvValueFromConfigMapKeyRef;

  /**
   * @schema TenantSpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: TenantSpecEnvValueFromFieldRef;

  /**
   * @schema TenantSpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecEnvValueFromResourceFieldRef;

  /**
   * @schema TenantSpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: TenantSpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'TenantSpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecEnvValueFrom(obj: TenantSpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_TenantSpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_TenantSpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_TenantSpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_TenantSpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecFeaturesDomains
 */
export interface TenantSpecFeaturesDomains {
  /**
   * @schema TenantSpecFeaturesDomains#console
   */
  readonly console?: string;

  /**
   * @schema TenantSpecFeaturesDomains#minio
   */
  readonly minio?: string[];

}

/**
 * Converts an object of type 'TenantSpecFeaturesDomains' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecFeaturesDomains(obj: TenantSpecFeaturesDomains | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'console': obj.console,
    'minio': obj.minio?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnv
 */
export interface TenantSpecInitContainersEnv {
  /**
   * @schema TenantSpecInitContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema TenantSpecInitContainersEnv#valueFrom
   */
  readonly valueFrom?: TenantSpecInitContainersEnvValueFrom;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnv(obj: TenantSpecInitContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_TenantSpecInitContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvFrom
 */
export interface TenantSpecInitContainersEnvFrom {
  /**
   * @schema TenantSpecInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: TenantSpecInitContainersEnvFromConfigMapRef;

  /**
   * @schema TenantSpecInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema TenantSpecInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: TenantSpecInitContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvFrom(obj: TenantSpecInitContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_TenantSpecInitContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_TenantSpecInitContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecycle
 */
export interface TenantSpecInitContainersLifecycle {
  /**
   * @schema TenantSpecInitContainersLifecycle#postStart
   */
  readonly postStart?: TenantSpecInitContainersLifecyclePostStart;

  /**
   * @schema TenantSpecInitContainersLifecycle#preStop
   */
  readonly preStop?: TenantSpecInitContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecycle(obj: TenantSpecInitContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_TenantSpecInitContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_TenantSpecInitContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLivenessProbe
 */
export interface TenantSpecInitContainersLivenessProbe {
  /**
   * @schema TenantSpecInitContainersLivenessProbe#exec
   */
  readonly exec?: TenantSpecInitContainersLivenessProbeExec;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#grpc
   */
  readonly grpc?: TenantSpecInitContainersLivenessProbeGrpc;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: TenantSpecInitContainersLivenessProbeHttpGet;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: TenantSpecInitContainersLivenessProbeTcpSocket;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLivenessProbe(obj: TenantSpecInitContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecInitContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecInitContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecInitContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecInitContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersPorts
 */
export interface TenantSpecInitContainersPorts {
  /**
   * @schema TenantSpecInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema TenantSpecInitContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema TenantSpecInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema TenantSpecInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersPorts(obj: TenantSpecInitContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersReadinessProbe
 */
export interface TenantSpecInitContainersReadinessProbe {
  /**
   * @schema TenantSpecInitContainersReadinessProbe#exec
   */
  readonly exec?: TenantSpecInitContainersReadinessProbeExec;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#grpc
   */
  readonly grpc?: TenantSpecInitContainersReadinessProbeGrpc;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: TenantSpecInitContainersReadinessProbeHttpGet;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: TenantSpecInitContainersReadinessProbeTcpSocket;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecInitContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersReadinessProbe(obj: TenantSpecInitContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecInitContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecInitContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecInitContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecInitContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersResizePolicy
 */
export interface TenantSpecInitContainersResizePolicy {
  /**
   * @schema TenantSpecInitContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema TenantSpecInitContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersResizePolicy(obj: TenantSpecInitContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersResources
 */
export interface TenantSpecInitContainersResources {
  /**
   * @schema TenantSpecInitContainersResources#claims
   */
  readonly claims?: TenantSpecInitContainersResourcesClaims[];

  /**
   * @schema TenantSpecInitContainersResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecInitContainersResourcesLimits };

  /**
   * @schema TenantSpecInitContainersResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecInitContainersResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecInitContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersResources(obj: TenantSpecInitContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TenantSpecInitContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersSecurityContext
 */
export interface TenantSpecInitContainersSecurityContext {
  /**
   * @schema TenantSpecInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema TenantSpecInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: TenantSpecInitContainersSecurityContextCapabilities;

  /**
   * @schema TenantSpecInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema TenantSpecInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema TenantSpecInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema TenantSpecInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TenantSpecInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TenantSpecInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TenantSpecInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TenantSpecInitContainersSecurityContextSeLinuxOptions;

  /**
   * @schema TenantSpecInitContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TenantSpecInitContainersSecurityContextSeccompProfile;

  /**
   * @schema TenantSpecInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TenantSpecInitContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TenantSpecInitContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersSecurityContext(obj: TenantSpecInitContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_TenantSpecInitContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TenantSpecInitContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TenantSpecInitContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_TenantSpecInitContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersStartupProbe
 */
export interface TenantSpecInitContainersStartupProbe {
  /**
   * @schema TenantSpecInitContainersStartupProbe#exec
   */
  readonly exec?: TenantSpecInitContainersStartupProbeExec;

  /**
   * @schema TenantSpecInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecInitContainersStartupProbe#grpc
   */
  readonly grpc?: TenantSpecInitContainersStartupProbeGrpc;

  /**
   * @schema TenantSpecInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: TenantSpecInitContainersStartupProbeHttpGet;

  /**
   * @schema TenantSpecInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: TenantSpecInitContainersStartupProbeTcpSocket;

  /**
   * @schema TenantSpecInitContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecInitContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersStartupProbe(obj: TenantSpecInitContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecInitContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecInitContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecInitContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecInitContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersVolumeDevices
 */
export interface TenantSpecInitContainersVolumeDevices {
  /**
   * @schema TenantSpecInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema TenantSpecInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersVolumeDevices(obj: TenantSpecInitContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersVolumeMounts
 */
export interface TenantSpecInitContainersVolumeMounts {
  /**
   * @schema TenantSpecInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema TenantSpecInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema TenantSpecInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema TenantSpecInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersVolumeMounts(obj: TenantSpecInitContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinity
 */
export interface TenantSpecKesAffinity {
  /**
   * @schema TenantSpecKesAffinity#nodeAffinity
   */
  readonly nodeAffinity?: TenantSpecKesAffinityNodeAffinity;

  /**
   * @schema TenantSpecKesAffinity#podAffinity
   */
  readonly podAffinity?: TenantSpecKesAffinityPodAffinity;

  /**
   * @schema TenantSpecKesAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: TenantSpecKesAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'TenantSpecKesAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinity(obj: TenantSpecKesAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_TenantSpecKesAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_TenantSpecKesAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_TenantSpecKesAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesClientCertSecret
 */
export interface TenantSpecKesClientCertSecret {
  /**
   * @schema TenantSpecKesClientCertSecret#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecKesClientCertSecret#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecKesClientCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesClientCertSecret(obj: TenantSpecKesClientCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesContainerSecurityContext
 */
export interface TenantSpecKesContainerSecurityContext {
  /**
   * @schema TenantSpecKesContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema TenantSpecKesContainerSecurityContext#capabilities
   */
  readonly capabilities?: TenantSpecKesContainerSecurityContextCapabilities;

  /**
   * @schema TenantSpecKesContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema TenantSpecKesContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema TenantSpecKesContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema TenantSpecKesContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TenantSpecKesContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TenantSpecKesContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TenantSpecKesContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TenantSpecKesContainerSecurityContextSeLinuxOptions;

  /**
   * @schema TenantSpecKesContainerSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TenantSpecKesContainerSecurityContextSeccompProfile;

  /**
   * @schema TenantSpecKesContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TenantSpecKesContainerSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TenantSpecKesContainerSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesContainerSecurityContext(obj: TenantSpecKesContainerSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_TenantSpecKesContainerSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TenantSpecKesContainerSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TenantSpecKesContainerSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_TenantSpecKesContainerSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesEnv
 */
export interface TenantSpecKesEnv {
  /**
   * @schema TenantSpecKesEnv#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecKesEnv#value
   */
  readonly value?: string;

  /**
   * @schema TenantSpecKesEnv#valueFrom
   */
  readonly valueFrom?: TenantSpecKesEnvValueFrom;

}

/**
 * Converts an object of type 'TenantSpecKesEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesEnv(obj: TenantSpecKesEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_TenantSpecKesEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesExternalCertSecret
 */
export interface TenantSpecKesExternalCertSecret {
  /**
   * @schema TenantSpecKesExternalCertSecret#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecKesExternalCertSecret#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecKesExternalCertSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesExternalCertSecret(obj: TenantSpecKesExternalCertSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesKesSecret
 */
export interface TenantSpecKesKesSecret {
  /**
   * @schema TenantSpecKesKesSecret#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecKesKesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesKesSecret(obj: TenantSpecKesKesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesResources
 */
export interface TenantSpecKesResources {
  /**
   * @schema TenantSpecKesResources#claims
   */
  readonly claims?: TenantSpecKesResourcesClaims[];

  /**
   * @schema TenantSpecKesResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecKesResourcesLimits };

  /**
   * @schema TenantSpecKesResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecKesResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecKesResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesResources(obj: TenantSpecKesResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TenantSpecKesResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesSecurityContext
 */
export interface TenantSpecKesSecurityContext {
  /**
   * @schema TenantSpecKesSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema TenantSpecKesSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema TenantSpecKesSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TenantSpecKesSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TenantSpecKesSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TenantSpecKesSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TenantSpecKesSecurityContextSeLinuxOptions;

  /**
   * @schema TenantSpecKesSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TenantSpecKesSecurityContextSeccompProfile;

  /**
   * @schema TenantSpecKesSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema TenantSpecKesSecurityContext#sysctls
   */
  readonly sysctls?: TenantSpecKesSecurityContextSysctls[];

  /**
   * @schema TenantSpecKesSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TenantSpecKesSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TenantSpecKesSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesSecurityContext(obj: TenantSpecKesSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TenantSpecKesSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TenantSpecKesSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'sysctls': obj.sysctls?.map(y => toJson_TenantSpecKesSecurityContextSysctls(y)),
    'windowsOptions': toJson_TenantSpecKesSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesTolerations
 */
export interface TenantSpecKesTolerations {
  /**
   * @schema TenantSpecKesTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema TenantSpecKesTolerations#key
   */
  readonly key?: string;

  /**
   * @schema TenantSpecKesTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema TenantSpecKesTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema TenantSpecKesTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'TenantSpecKesTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesTolerations(obj: TenantSpecKesTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesTopologySpreadConstraints
 */
export interface TenantSpecKesTopologySpreadConstraints {
  /**
   * @schema TenantSpecKesTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: TenantSpecKesTopologySpreadConstraintsLabelSelector;

  /**
   * @schema TenantSpecKesTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema TenantSpecKesTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema TenantSpecKesTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema TenantSpecKesTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema TenantSpecKesTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema TenantSpecKesTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'TenantSpecKesTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesTopologySpreadConstraints(obj: TenantSpecKesTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecKesTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePostStart
 */
export interface TenantSpecLifecyclePostStart {
  /**
   * @schema TenantSpecLifecyclePostStart#exec
   */
  readonly exec?: TenantSpecLifecyclePostStartExec;

  /**
   * @schema TenantSpecLifecyclePostStart#httpGet
   */
  readonly httpGet?: TenantSpecLifecyclePostStartHttpGet;

  /**
   * @schema TenantSpecLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: TenantSpecLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePostStart(obj: TenantSpecLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_TenantSpecLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_TenantSpecLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePreStop
 */
export interface TenantSpecLifecyclePreStop {
  /**
   * @schema TenantSpecLifecyclePreStop#exec
   */
  readonly exec?: TenantSpecLifecyclePreStopExec;

  /**
   * @schema TenantSpecLifecyclePreStop#httpGet
   */
  readonly httpGet?: TenantSpecLifecyclePreStopHttpGet;

  /**
   * @schema TenantSpecLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: TenantSpecLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePreStop(obj: TenantSpecLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_TenantSpecLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_TenantSpecLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLivenessExec
 */
export interface TenantSpecLivenessExec {
  /**
   * @schema TenantSpecLivenessExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecLivenessExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLivenessExec(obj: TenantSpecLivenessExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLivenessGrpc
 */
export interface TenantSpecLivenessGrpc {
  /**
   * @schema TenantSpecLivenessGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecLivenessGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecLivenessGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLivenessGrpc(obj: TenantSpecLivenessGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLivenessHttpGet
 */
export interface TenantSpecLivenessHttpGet {
  /**
   * @schema TenantSpecLivenessHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecLivenessHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecLivenessHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecLivenessHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecLivenessHttpGet#port
   */
  readonly port: TenantSpecLivenessHttpGetPort;

  /**
   * @schema TenantSpecLivenessHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecLivenessHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLivenessHttpGet(obj: TenantSpecLivenessHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecLivenessHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLivenessTcpSocket
 */
export interface TenantSpecLivenessTcpSocket {
  /**
   * @schema TenantSpecLivenessTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecLivenessTcpSocket#port
   */
  readonly port: TenantSpecLivenessTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecLivenessTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLivenessTcpSocket(obj: TenantSpecLivenessTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinity
 */
export interface TenantSpecPoolsAffinity {
  /**
   * @schema TenantSpecPoolsAffinity#nodeAffinity
   */
  readonly nodeAffinity?: TenantSpecPoolsAffinityNodeAffinity;

  /**
   * @schema TenantSpecPoolsAffinity#podAffinity
   */
  readonly podAffinity?: TenantSpecPoolsAffinityPodAffinity;

  /**
   * @schema TenantSpecPoolsAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: TenantSpecPoolsAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinity(obj: TenantSpecPoolsAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_TenantSpecPoolsAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_TenantSpecPoolsAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_TenantSpecPoolsAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsContainerSecurityContext
 */
export interface TenantSpecPoolsContainerSecurityContext {
  /**
   * @schema TenantSpecPoolsContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#capabilities
   */
  readonly capabilities?: TenantSpecPoolsContainerSecurityContextCapabilities;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TenantSpecPoolsContainerSecurityContextSeLinuxOptions;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TenantSpecPoolsContainerSecurityContextSeccompProfile;

  /**
   * @schema TenantSpecPoolsContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TenantSpecPoolsContainerSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TenantSpecPoolsContainerSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsContainerSecurityContext(obj: TenantSpecPoolsContainerSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_TenantSpecPoolsContainerSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TenantSpecPoolsContainerSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TenantSpecPoolsContainerSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_TenantSpecPoolsContainerSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsResources
 */
export interface TenantSpecPoolsResources {
  /**
   * @schema TenantSpecPoolsResources#claims
   */
  readonly claims?: TenantSpecPoolsResourcesClaims[];

  /**
   * @schema TenantSpecPoolsResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecPoolsResourcesLimits };

  /**
   * @schema TenantSpecPoolsResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecPoolsResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecPoolsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsResources(obj: TenantSpecPoolsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TenantSpecPoolsResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsSecurityContext
 */
export interface TenantSpecPoolsSecurityContext {
  /**
   * @schema TenantSpecPoolsSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema TenantSpecPoolsSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema TenantSpecPoolsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TenantSpecPoolsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TenantSpecPoolsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TenantSpecPoolsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TenantSpecPoolsSecurityContextSeLinuxOptions;

  /**
   * @schema TenantSpecPoolsSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TenantSpecPoolsSecurityContextSeccompProfile;

  /**
   * @schema TenantSpecPoolsSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema TenantSpecPoolsSecurityContext#sysctls
   */
  readonly sysctls?: TenantSpecPoolsSecurityContextSysctls[];

  /**
   * @schema TenantSpecPoolsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TenantSpecPoolsSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TenantSpecPoolsSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsSecurityContext(obj: TenantSpecPoolsSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TenantSpecPoolsSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TenantSpecPoolsSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'sysctls': obj.sysctls?.map(y => toJson_TenantSpecPoolsSecurityContextSysctls(y)),
    'windowsOptions': toJson_TenantSpecPoolsSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsTolerations
 */
export interface TenantSpecPoolsTolerations {
  /**
   * @schema TenantSpecPoolsTolerations#effect
   */
  readonly effect?: string;

  /**
   * @schema TenantSpecPoolsTolerations#key
   */
  readonly key?: string;

  /**
   * @schema TenantSpecPoolsTolerations#operator
   */
  readonly operator?: string;

  /**
   * @schema TenantSpecPoolsTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * @schema TenantSpecPoolsTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsTolerations(obj: TenantSpecPoolsTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsTopologySpreadConstraints
 */
export interface TenantSpecPoolsTopologySpreadConstraints {
  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: TenantSpecPoolsTopologySpreadConstraintsLabelSelector;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#minDomains
   */
  readonly minDomains?: number;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#nodeAffinityPolicy
   */
  readonly nodeAffinityPolicy?: string;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#nodeTaintsPolicy
   */
  readonly nodeTaintsPolicy?: string;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsTopologySpreadConstraints(obj: TenantSpecPoolsTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecPoolsTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'maxSkew': obj.maxSkew,
    'minDomains': obj.minDomains,
    'nodeAffinityPolicy': obj.nodeAffinityPolicy,
    'nodeTaintsPolicy': obj.nodeTaintsPolicy,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplate
 */
export interface TenantSpecPoolsVolumeClaimTemplate {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplate#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplate#kind
   */
  readonly kind?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplate#metadata
   */
  readonly metadata?: TenantSpecPoolsVolumeClaimTemplateMetadata;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplate#spec
   */
  readonly spec?: TenantSpecPoolsVolumeClaimTemplateSpec;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplate#status
   */
  readonly status?: TenantSpecPoolsVolumeClaimTemplateStatus;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplate(obj: TenantSpecPoolsVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'metadata': toJson_TenantSpecPoolsVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_TenantSpecPoolsVolumeClaimTemplateSpec(obj.spec),
    'status': toJson_TenantSpecPoolsVolumeClaimTemplateStatus(obj.status),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecReadinessExec
 */
export interface TenantSpecReadinessExec {
  /**
   * @schema TenantSpecReadinessExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecReadinessExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecReadinessExec(obj: TenantSpecReadinessExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecReadinessGrpc
 */
export interface TenantSpecReadinessGrpc {
  /**
   * @schema TenantSpecReadinessGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecReadinessGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecReadinessGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecReadinessGrpc(obj: TenantSpecReadinessGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecReadinessHttpGet
 */
export interface TenantSpecReadinessHttpGet {
  /**
   * @schema TenantSpecReadinessHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecReadinessHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecReadinessHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecReadinessHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecReadinessHttpGet#port
   */
  readonly port: TenantSpecReadinessHttpGetPort;

  /**
   * @schema TenantSpecReadinessHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecReadinessHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecReadinessHttpGet(obj: TenantSpecReadinessHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecReadinessHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecReadinessTcpSocket
 */
export interface TenantSpecReadinessTcpSocket {
  /**
   * @schema TenantSpecReadinessTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecReadinessTcpSocket#port
   */
  readonly port: TenantSpecReadinessTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecReadinessTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecReadinessTcpSocket(obj: TenantSpecReadinessTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainers
 */
export interface TenantSpecSideCarsContainers {
  /**
   * @schema TenantSpecSideCarsContainers#args
   */
  readonly args?: string[];

  /**
   * @schema TenantSpecSideCarsContainers#command
   */
  readonly command?: string[];

  /**
   * @schema TenantSpecSideCarsContainers#env
   */
  readonly env?: TenantSpecSideCarsContainersEnv[];

  /**
   * @schema TenantSpecSideCarsContainers#envFrom
   */
  readonly envFrom?: TenantSpecSideCarsContainersEnvFrom[];

  /**
   * @schema TenantSpecSideCarsContainers#image
   */
  readonly image?: string;

  /**
   * @schema TenantSpecSideCarsContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * @schema TenantSpecSideCarsContainers#lifecycle
   */
  readonly lifecycle?: TenantSpecSideCarsContainersLifecycle;

  /**
   * @schema TenantSpecSideCarsContainers#livenessProbe
   */
  readonly livenessProbe?: TenantSpecSideCarsContainersLivenessProbe;

  /**
   * @schema TenantSpecSideCarsContainers#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainers#ports
   */
  readonly ports?: TenantSpecSideCarsContainersPorts[];

  /**
   * @schema TenantSpecSideCarsContainers#readinessProbe
   */
  readonly readinessProbe?: TenantSpecSideCarsContainersReadinessProbe;

  /**
   * @schema TenantSpecSideCarsContainers#resizePolicy
   */
  readonly resizePolicy?: TenantSpecSideCarsContainersResizePolicy[];

  /**
   * @schema TenantSpecSideCarsContainers#resources
   */
  readonly resources?: TenantSpecSideCarsContainersResources;

  /**
   * @schema TenantSpecSideCarsContainers#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * @schema TenantSpecSideCarsContainers#securityContext
   */
  readonly securityContext?: TenantSpecSideCarsContainersSecurityContext;

  /**
   * @schema TenantSpecSideCarsContainers#startupProbe
   */
  readonly startupProbe?: TenantSpecSideCarsContainersStartupProbe;

  /**
   * @schema TenantSpecSideCarsContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * @schema TenantSpecSideCarsContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * @schema TenantSpecSideCarsContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * @schema TenantSpecSideCarsContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * @schema TenantSpecSideCarsContainers#tty
   */
  readonly tty?: boolean;

  /**
   * @schema TenantSpecSideCarsContainers#volumeDevices
   */
  readonly volumeDevices?: TenantSpecSideCarsContainersVolumeDevices[];

  /**
   * @schema TenantSpecSideCarsContainers#volumeMounts
   */
  readonly volumeMounts?: TenantSpecSideCarsContainersVolumeMounts[];

  /**
   * @schema TenantSpecSideCarsContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainers(obj: TenantSpecSideCarsContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_TenantSpecSideCarsContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_TenantSpecSideCarsContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_TenantSpecSideCarsContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_TenantSpecSideCarsContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_TenantSpecSideCarsContainersPorts(y)),
    'readinessProbe': toJson_TenantSpecSideCarsContainersReadinessProbe(obj.readinessProbe),
    'resizePolicy': obj.resizePolicy?.map(y => toJson_TenantSpecSideCarsContainersResizePolicy(y)),
    'resources': toJson_TenantSpecSideCarsContainersResources(obj.resources),
    'restartPolicy': obj.restartPolicy,
    'securityContext': toJson_TenantSpecSideCarsContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_TenantSpecSideCarsContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_TenantSpecSideCarsContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_TenantSpecSideCarsContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsResources
 */
export interface TenantSpecSideCarsResources {
  /**
   * @schema TenantSpecSideCarsResources#claims
   */
  readonly claims?: TenantSpecSideCarsResourcesClaims[];

  /**
   * @schema TenantSpecSideCarsResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecSideCarsResourcesLimits };

  /**
   * @schema TenantSpecSideCarsResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecSideCarsResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecSideCarsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsResources(obj: TenantSpecSideCarsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TenantSpecSideCarsResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplates
 */
export interface TenantSpecSideCarsVolumeClaimTemplates {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplates#metadata
   */
  readonly metadata?: TenantSpecSideCarsVolumeClaimTemplatesMetadata;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplates#spec
   */
  readonly spec?: TenantSpecSideCarsVolumeClaimTemplatesSpec;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplates#status
   */
  readonly status?: TenantSpecSideCarsVolumeClaimTemplatesStatus;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplates' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplates(obj: TenantSpecSideCarsVolumeClaimTemplates | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'metadata': toJson_TenantSpecSideCarsVolumeClaimTemplatesMetadata(obj.metadata),
    'spec': toJson_TenantSpecSideCarsVolumeClaimTemplatesSpec(obj.spec),
    'status': toJson_TenantSpecSideCarsVolumeClaimTemplatesStatus(obj.status),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumes
 */
export interface TenantSpecSideCarsVolumes {
  /**
   * @schema TenantSpecSideCarsVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: TenantSpecSideCarsVolumesAwsElasticBlockStore;

  /**
   * @schema TenantSpecSideCarsVolumes#azureDisk
   */
  readonly azureDisk?: TenantSpecSideCarsVolumesAzureDisk;

  /**
   * @schema TenantSpecSideCarsVolumes#azureFile
   */
  readonly azureFile?: TenantSpecSideCarsVolumesAzureFile;

  /**
   * @schema TenantSpecSideCarsVolumes#cephfs
   */
  readonly cephfs?: TenantSpecSideCarsVolumesCephfs;

  /**
   * @schema TenantSpecSideCarsVolumes#cinder
   */
  readonly cinder?: TenantSpecSideCarsVolumesCinder;

  /**
   * @schema TenantSpecSideCarsVolumes#configMap
   */
  readonly configMap?: TenantSpecSideCarsVolumesConfigMap;

  /**
   * @schema TenantSpecSideCarsVolumes#csi
   */
  readonly csi?: TenantSpecSideCarsVolumesCsi;

  /**
   * @schema TenantSpecSideCarsVolumes#downwardAPI
   */
  readonly downwardApi?: TenantSpecSideCarsVolumesDownwardApi;

  /**
   * @schema TenantSpecSideCarsVolumes#emptyDir
   */
  readonly emptyDir?: TenantSpecSideCarsVolumesEmptyDir;

  /**
   * @schema TenantSpecSideCarsVolumes#ephemeral
   */
  readonly ephemeral?: TenantSpecSideCarsVolumesEphemeral;

  /**
   * @schema TenantSpecSideCarsVolumes#fc
   */
  readonly fc?: TenantSpecSideCarsVolumesFc;

  /**
   * @schema TenantSpecSideCarsVolumes#flexVolume
   */
  readonly flexVolume?: TenantSpecSideCarsVolumesFlexVolume;

  /**
   * @schema TenantSpecSideCarsVolumes#flocker
   */
  readonly flocker?: TenantSpecSideCarsVolumesFlocker;

  /**
   * @schema TenantSpecSideCarsVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: TenantSpecSideCarsVolumesGcePersistentDisk;

  /**
   * @schema TenantSpecSideCarsVolumes#gitRepo
   */
  readonly gitRepo?: TenantSpecSideCarsVolumesGitRepo;

  /**
   * @schema TenantSpecSideCarsVolumes#glusterfs
   */
  readonly glusterfs?: TenantSpecSideCarsVolumesGlusterfs;

  /**
   * @schema TenantSpecSideCarsVolumes#hostPath
   */
  readonly hostPath?: TenantSpecSideCarsVolumesHostPath;

  /**
   * @schema TenantSpecSideCarsVolumes#iscsi
   */
  readonly iscsi?: TenantSpecSideCarsVolumesIscsi;

  /**
   * @schema TenantSpecSideCarsVolumes#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsVolumes#nfs
   */
  readonly nfs?: TenantSpecSideCarsVolumesNfs;

  /**
   * @schema TenantSpecSideCarsVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: TenantSpecSideCarsVolumesPersistentVolumeClaim;

  /**
   * @schema TenantSpecSideCarsVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: TenantSpecSideCarsVolumesPhotonPersistentDisk;

  /**
   * @schema TenantSpecSideCarsVolumes#portworxVolume
   */
  readonly portworxVolume?: TenantSpecSideCarsVolumesPortworxVolume;

  /**
   * @schema TenantSpecSideCarsVolumes#projected
   */
  readonly projected?: TenantSpecSideCarsVolumesProjected;

  /**
   * @schema TenantSpecSideCarsVolumes#quobyte
   */
  readonly quobyte?: TenantSpecSideCarsVolumesQuobyte;

  /**
   * @schema TenantSpecSideCarsVolumes#rbd
   */
  readonly rbd?: TenantSpecSideCarsVolumesRbd;

  /**
   * @schema TenantSpecSideCarsVolumes#scaleIO
   */
  readonly scaleIo?: TenantSpecSideCarsVolumesScaleIo;

  /**
   * @schema TenantSpecSideCarsVolumes#secret
   */
  readonly secret?: TenantSpecSideCarsVolumesSecret;

  /**
   * @schema TenantSpecSideCarsVolumes#storageos
   */
  readonly storageos?: TenantSpecSideCarsVolumesStorageos;

  /**
   * @schema TenantSpecSideCarsVolumes#vsphereVolume
   */
  readonly vsphereVolume?: TenantSpecSideCarsVolumesVsphereVolume;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumes(obj: TenantSpecSideCarsVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_TenantSpecSideCarsVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_TenantSpecSideCarsVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_TenantSpecSideCarsVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_TenantSpecSideCarsVolumesCephfs(obj.cephfs),
    'cinder': toJson_TenantSpecSideCarsVolumesCinder(obj.cinder),
    'configMap': toJson_TenantSpecSideCarsVolumesConfigMap(obj.configMap),
    'csi': toJson_TenantSpecSideCarsVolumesCsi(obj.csi),
    'downwardAPI': toJson_TenantSpecSideCarsVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_TenantSpecSideCarsVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_TenantSpecSideCarsVolumesEphemeral(obj.ephemeral),
    'fc': toJson_TenantSpecSideCarsVolumesFc(obj.fc),
    'flexVolume': toJson_TenantSpecSideCarsVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_TenantSpecSideCarsVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_TenantSpecSideCarsVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_TenantSpecSideCarsVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_TenantSpecSideCarsVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_TenantSpecSideCarsVolumesHostPath(obj.hostPath),
    'iscsi': toJson_TenantSpecSideCarsVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_TenantSpecSideCarsVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_TenantSpecSideCarsVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_TenantSpecSideCarsVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_TenantSpecSideCarsVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_TenantSpecSideCarsVolumesProjected(obj.projected),
    'quobyte': toJson_TenantSpecSideCarsVolumesQuobyte(obj.quobyte),
    'rbd': toJson_TenantSpecSideCarsVolumesRbd(obj.rbd),
    'scaleIO': toJson_TenantSpecSideCarsVolumesScaleIo(obj.scaleIo),
    'secret': toJson_TenantSpecSideCarsVolumesSecret(obj.secret),
    'storageos': toJson_TenantSpecSideCarsVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_TenantSpecSideCarsVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecStartupExec
 */
export interface TenantSpecStartupExec {
  /**
   * @schema TenantSpecStartupExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecStartupExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecStartupExec(obj: TenantSpecStartupExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecStartupGrpc
 */
export interface TenantSpecStartupGrpc {
  /**
   * @schema TenantSpecStartupGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecStartupGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecStartupGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecStartupGrpc(obj: TenantSpecStartupGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecStartupHttpGet
 */
export interface TenantSpecStartupHttpGet {
  /**
   * @schema TenantSpecStartupHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecStartupHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecStartupHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecStartupHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecStartupHttpGet#port
   */
  readonly port: TenantSpecStartupHttpGetPort;

  /**
   * @schema TenantSpecStartupHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecStartupHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecStartupHttpGet(obj: TenantSpecStartupHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecStartupHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecStartupTcpSocket
 */
export interface TenantSpecStartupTcpSocket {
  /**
   * @schema TenantSpecStartupTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecStartupTcpSocket#port
   */
  readonly port: TenantSpecStartupTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecStartupTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecStartupTcpSocket(obj: TenantSpecStartupTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesCephfsSecretRef
 */
export interface TenantSpecAdditionalVolumesCephfsSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesCephfsSecretRef(obj: TenantSpecAdditionalVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesCinderSecretRef
 */
export interface TenantSpecAdditionalVolumesCinderSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesCinderSecretRef(obj: TenantSpecAdditionalVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesConfigMapItems
 */
export interface TenantSpecAdditionalVolumesConfigMapItems {
  /**
   * @schema TenantSpecAdditionalVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecAdditionalVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesConfigMapItems(obj: TenantSpecAdditionalVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesCsiNodePublishSecretRef
 */
export interface TenantSpecAdditionalVolumesCsiNodePublishSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesCsiNodePublishSecretRef(obj: TenantSpecAdditionalVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesDownwardApiItems
 */
export interface TenantSpecAdditionalVolumesDownwardApiItems {
  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: TenantSpecAdditionalVolumesDownwardApiItemsFieldRef;

  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesDownwardApiItems(obj: TenantSpecAdditionalVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_TenantSpecAdditionalVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEmptyDirSizeLimit
 */
export class TenantSpecAdditionalVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): TenantSpecAdditionalVolumesEmptyDirSizeLimit {
    return new TenantSpecAdditionalVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): TenantSpecAdditionalVolumesEmptyDirSizeLimit {
    return new TenantSpecAdditionalVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesFlexVolumeSecretRef
 */
export interface TenantSpecAdditionalVolumesFlexVolumeSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesFlexVolumeSecretRef(obj: TenantSpecAdditionalVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesIscsiSecretRef
 */
export interface TenantSpecAdditionalVolumesIscsiSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesIscsiSecretRef(obj: TenantSpecAdditionalVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSources
 */
export interface TenantSpecAdditionalVolumesProjectedSources {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSources#clusterTrustBundle
   */
  readonly clusterTrustBundle?: TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSources#configMap
   */
  readonly configMap?: TenantSpecAdditionalVolumesProjectedSourcesConfigMap;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: TenantSpecAdditionalVolumesProjectedSourcesDownwardApi;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSources#secret
   */
  readonly secret?: TenantSpecAdditionalVolumesProjectedSourcesSecret;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSources(obj: TenantSpecAdditionalVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterTrustBundle': toJson_TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle(obj.clusterTrustBundle),
    'configMap': toJson_TenantSpecAdditionalVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_TenantSpecAdditionalVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesRbdSecretRef
 */
export interface TenantSpecAdditionalVolumesRbdSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesRbdSecretRef(obj: TenantSpecAdditionalVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesScaleIoSecretRef
 */
export interface TenantSpecAdditionalVolumesScaleIoSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesScaleIoSecretRef(obj: TenantSpecAdditionalVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesSecretItems
 */
export interface TenantSpecAdditionalVolumesSecretItems {
  /**
   * @schema TenantSpecAdditionalVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecAdditionalVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesSecretItems(obj: TenantSpecAdditionalVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesStorageosSecretRef
 */
export interface TenantSpecAdditionalVolumesStorageosSecretRef {
  /**
   * @schema TenantSpecAdditionalVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesStorageosSecretRef(obj: TenantSpecAdditionalVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecEnvValueFromConfigMapKeyRef
 */
export interface TenantSpecEnvValueFromConfigMapKeyRef {
  /**
   * @schema TenantSpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecEnvValueFromConfigMapKeyRef(obj: TenantSpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecEnvValueFromFieldRef
 */
export interface TenantSpecEnvValueFromFieldRef {
  /**
   * @schema TenantSpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecEnvValueFromFieldRef(obj: TenantSpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecEnvValueFromResourceFieldRef
 */
export interface TenantSpecEnvValueFromResourceFieldRef {
  /**
   * @schema TenantSpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema TenantSpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecEnvValueFromResourceFieldRef(obj: TenantSpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecEnvValueFromSecretKeyRef
 */
export interface TenantSpecEnvValueFromSecretKeyRef {
  /**
   * @schema TenantSpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecEnvValueFromSecretKeyRef(obj: TenantSpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvValueFrom
 */
export interface TenantSpecInitContainersEnvValueFrom {
  /**
   * @schema TenantSpecInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: TenantSpecInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema TenantSpecInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: TenantSpecInitContainersEnvValueFromFieldRef;

  /**
   * @schema TenantSpecInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecInitContainersEnvValueFromResourceFieldRef;

  /**
   * @schema TenantSpecInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: TenantSpecInitContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvValueFrom(obj: TenantSpecInitContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_TenantSpecInitContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_TenantSpecInitContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_TenantSpecInitContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_TenantSpecInitContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvFromConfigMapRef
 */
export interface TenantSpecInitContainersEnvFromConfigMapRef {
  /**
   * @schema TenantSpecInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvFromConfigMapRef(obj: TenantSpecInitContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvFromSecretRef
 */
export interface TenantSpecInitContainersEnvFromSecretRef {
  /**
   * @schema TenantSpecInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvFromSecretRef(obj: TenantSpecInitContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePostStart
 */
export interface TenantSpecInitContainersLifecyclePostStart {
  /**
   * @schema TenantSpecInitContainersLifecyclePostStart#exec
   */
  readonly exec?: TenantSpecInitContainersLifecyclePostStartExec;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: TenantSpecInitContainersLifecyclePostStartHttpGet;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStart#sleep
   */
  readonly sleep?: TenantSpecInitContainersLifecyclePostStartSleep;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: TenantSpecInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePostStart(obj: TenantSpecInitContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecInitContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_TenantSpecInitContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_TenantSpecInitContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_TenantSpecInitContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePreStop
 */
export interface TenantSpecInitContainersLifecyclePreStop {
  /**
   * @schema TenantSpecInitContainersLifecyclePreStop#exec
   */
  readonly exec?: TenantSpecInitContainersLifecyclePreStopExec;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: TenantSpecInitContainersLifecyclePreStopHttpGet;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStop#sleep
   */
  readonly sleep?: TenantSpecInitContainersLifecyclePreStopSleep;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: TenantSpecInitContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePreStop(obj: TenantSpecInitContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecInitContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_TenantSpecInitContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_TenantSpecInitContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_TenantSpecInitContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLivenessProbeExec
 */
export interface TenantSpecInitContainersLivenessProbeExec {
  /**
   * @schema TenantSpecInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecInitContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLivenessProbeExec(obj: TenantSpecInitContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLivenessProbeGrpc
 */
export interface TenantSpecInitContainersLivenessProbeGrpc {
  /**
   * @schema TenantSpecInitContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecInitContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLivenessProbeGrpc(obj: TenantSpecInitContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLivenessProbeHttpGet
 */
export interface TenantSpecInitContainersLivenessProbeHttpGet {
  /**
   * @schema TenantSpecInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecInitContainersLivenessProbeHttpGet#port
   */
  readonly port: TenantSpecInitContainersLivenessProbeHttpGetPort;

  /**
   * @schema TenantSpecInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLivenessProbeHttpGet(obj: TenantSpecInitContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLivenessProbeTcpSocket
 */
export interface TenantSpecInitContainersLivenessProbeTcpSocket {
  /**
   * @schema TenantSpecInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: TenantSpecInitContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLivenessProbeTcpSocket(obj: TenantSpecInitContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersReadinessProbeExec
 */
export interface TenantSpecInitContainersReadinessProbeExec {
  /**
   * @schema TenantSpecInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecInitContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersReadinessProbeExec(obj: TenantSpecInitContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersReadinessProbeGrpc
 */
export interface TenantSpecInitContainersReadinessProbeGrpc {
  /**
   * @schema TenantSpecInitContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecInitContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersReadinessProbeGrpc(obj: TenantSpecInitContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersReadinessProbeHttpGet
 */
export interface TenantSpecInitContainersReadinessProbeHttpGet {
  /**
   * @schema TenantSpecInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecInitContainersReadinessProbeHttpGet#port
   */
  readonly port: TenantSpecInitContainersReadinessProbeHttpGetPort;

  /**
   * @schema TenantSpecInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersReadinessProbeHttpGet(obj: TenantSpecInitContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersReadinessProbeTcpSocket
 */
export interface TenantSpecInitContainersReadinessProbeTcpSocket {
  /**
   * @schema TenantSpecInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: TenantSpecInitContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecInitContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersReadinessProbeTcpSocket(obj: TenantSpecInitContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersResourcesClaims
 */
export interface TenantSpecInitContainersResourcesClaims {
  /**
   * @schema TenantSpecInitContainersResourcesClaims#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersResourcesClaims(obj: TenantSpecInitContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersResourcesLimits
 */
export class TenantSpecInitContainersResourcesLimits {
  public static fromNumber(value: number): TenantSpecInitContainersResourcesLimits {
    return new TenantSpecInitContainersResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecInitContainersResourcesLimits {
    return new TenantSpecInitContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersResourcesRequests
 */
export class TenantSpecInitContainersResourcesRequests {
  public static fromNumber(value: number): TenantSpecInitContainersResourcesRequests {
    return new TenantSpecInitContainersResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecInitContainersResourcesRequests {
    return new TenantSpecInitContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersSecurityContextCapabilities
 */
export interface TenantSpecInitContainersSecurityContextCapabilities {
  /**
   * @schema TenantSpecInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema TenantSpecInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'TenantSpecInitContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersSecurityContextCapabilities(obj: TenantSpecInitContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersSecurityContextSeLinuxOptions
 */
export interface TenantSpecInitContainersSecurityContextSeLinuxOptions {
  /**
   * @schema TenantSpecInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TenantSpecInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TenantSpecInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TenantSpecInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersSecurityContextSeLinuxOptions(obj: TenantSpecInitContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersSecurityContextSeccompProfile
 */
export interface TenantSpecInitContainersSecurityContextSeccompProfile {
  /**
   * @schema TenantSpecInitContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TenantSpecInitContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersSecurityContextSeccompProfile(obj: TenantSpecInitContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersSecurityContextWindowsOptions
 */
export interface TenantSpecInitContainersSecurityContextWindowsOptions {
  /**
   * @schema TenantSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TenantSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TenantSpecInitContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TenantSpecInitContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersSecurityContextWindowsOptions(obj: TenantSpecInitContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersStartupProbeExec
 */
export interface TenantSpecInitContainersStartupProbeExec {
  /**
   * @schema TenantSpecInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecInitContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersStartupProbeExec(obj: TenantSpecInitContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersStartupProbeGrpc
 */
export interface TenantSpecInitContainersStartupProbeGrpc {
  /**
   * @schema TenantSpecInitContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecInitContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersStartupProbeGrpc(obj: TenantSpecInitContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersStartupProbeHttpGet
 */
export interface TenantSpecInitContainersStartupProbeHttpGet {
  /**
   * @schema TenantSpecInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecInitContainersStartupProbeHttpGet#port
   */
  readonly port: TenantSpecInitContainersStartupProbeHttpGetPort;

  /**
   * @schema TenantSpecInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersStartupProbeHttpGet(obj: TenantSpecInitContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecInitContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersStartupProbeTcpSocket
 */
export interface TenantSpecInitContainersStartupProbeTcpSocket {
  /**
   * @schema TenantSpecInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersStartupProbeTcpSocket#port
   */
  readonly port: TenantSpecInitContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecInitContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersStartupProbeTcpSocket(obj: TenantSpecInitContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityNodeAffinity
 */
export interface TenantSpecKesAffinityNodeAffinity {
  /**
   * @schema TenantSpecKesAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TenantSpecKesAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinity(obj: TenantSpecKesAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinity
 */
export interface TenantSpecKesAffinityPodAffinity {
  /**
   * @schema TenantSpecKesAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TenantSpecKesAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinity(obj: TenantSpecKesAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinity
 */
export interface TenantSpecKesAffinityPodAntiAffinity {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinity(obj: TenantSpecKesAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesContainerSecurityContextCapabilities
 */
export interface TenantSpecKesContainerSecurityContextCapabilities {
  /**
   * @schema TenantSpecKesContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema TenantSpecKesContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesContainerSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesContainerSecurityContextCapabilities(obj: TenantSpecKesContainerSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesContainerSecurityContextSeLinuxOptions
 */
export interface TenantSpecKesContainerSecurityContextSeLinuxOptions {
  /**
   * @schema TenantSpecKesContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TenantSpecKesContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TenantSpecKesContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TenantSpecKesContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecKesContainerSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesContainerSecurityContextSeLinuxOptions(obj: TenantSpecKesContainerSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesContainerSecurityContextSeccompProfile
 */
export interface TenantSpecKesContainerSecurityContextSeccompProfile {
  /**
   * @schema TenantSpecKesContainerSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TenantSpecKesContainerSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecKesContainerSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesContainerSecurityContextSeccompProfile(obj: TenantSpecKesContainerSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesContainerSecurityContextWindowsOptions
 */
export interface TenantSpecKesContainerSecurityContextWindowsOptions {
  /**
   * @schema TenantSpecKesContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TenantSpecKesContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TenantSpecKesContainerSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TenantSpecKesContainerSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TenantSpecKesContainerSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesContainerSecurityContextWindowsOptions(obj: TenantSpecKesContainerSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesEnvValueFrom
 */
export interface TenantSpecKesEnvValueFrom {
  /**
   * @schema TenantSpecKesEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: TenantSpecKesEnvValueFromConfigMapKeyRef;

  /**
   * @schema TenantSpecKesEnvValueFrom#fieldRef
   */
  readonly fieldRef?: TenantSpecKesEnvValueFromFieldRef;

  /**
   * @schema TenantSpecKesEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecKesEnvValueFromResourceFieldRef;

  /**
   * @schema TenantSpecKesEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: TenantSpecKesEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'TenantSpecKesEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesEnvValueFrom(obj: TenantSpecKesEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_TenantSpecKesEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_TenantSpecKesEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_TenantSpecKesEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_TenantSpecKesEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesResourcesClaims
 */
export interface TenantSpecKesResourcesClaims {
  /**
   * @schema TenantSpecKesResourcesClaims#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecKesResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesResourcesClaims(obj: TenantSpecKesResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesResourcesLimits
 */
export class TenantSpecKesResourcesLimits {
  public static fromNumber(value: number): TenantSpecKesResourcesLimits {
    return new TenantSpecKesResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecKesResourcesLimits {
    return new TenantSpecKesResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecKesResourcesRequests
 */
export class TenantSpecKesResourcesRequests {
  public static fromNumber(value: number): TenantSpecKesResourcesRequests {
    return new TenantSpecKesResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecKesResourcesRequests {
    return new TenantSpecKesResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecKesSecurityContextSeLinuxOptions
 */
export interface TenantSpecKesSecurityContextSeLinuxOptions {
  /**
   * @schema TenantSpecKesSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TenantSpecKesSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TenantSpecKesSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TenantSpecKesSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecKesSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesSecurityContextSeLinuxOptions(obj: TenantSpecKesSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesSecurityContextSeccompProfile
 */
export interface TenantSpecKesSecurityContextSeccompProfile {
  /**
   * @schema TenantSpecKesSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TenantSpecKesSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecKesSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesSecurityContextSeccompProfile(obj: TenantSpecKesSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesSecurityContextSysctls
 */
export interface TenantSpecKesSecurityContextSysctls {
  /**
   * @schema TenantSpecKesSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecKesSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecKesSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesSecurityContextSysctls(obj: TenantSpecKesSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesSecurityContextWindowsOptions
 */
export interface TenantSpecKesSecurityContextWindowsOptions {
  /**
   * @schema TenantSpecKesSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TenantSpecKesSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TenantSpecKesSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TenantSpecKesSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TenantSpecKesSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesSecurityContextWindowsOptions(obj: TenantSpecKesSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesTopologySpreadConstraintsLabelSelector
 */
export interface TenantSpecKesTopologySpreadConstraintsLabelSelector {
  /**
   * @schema TenantSpecKesTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesTopologySpreadConstraintsLabelSelector(obj: TenantSpecKesTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePostStartExec
 */
export interface TenantSpecLifecyclePostStartExec {
  /**
   * @schema TenantSpecLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePostStartExec(obj: TenantSpecLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePostStartHttpGet
 */
export interface TenantSpecLifecyclePostStartHttpGet {
  /**
   * @schema TenantSpecLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecLifecyclePostStartHttpGet#port
   */
  readonly port: TenantSpecLifecyclePostStartHttpGetPort;

  /**
   * @schema TenantSpecLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePostStartHttpGet(obj: TenantSpecLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePostStartTcpSocket
 */
export interface TenantSpecLifecyclePostStartTcpSocket {
  /**
   * @schema TenantSpecLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecLifecyclePostStartTcpSocket#port
   */
  readonly port: TenantSpecLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePostStartTcpSocket(obj: TenantSpecLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePreStopExec
 */
export interface TenantSpecLifecyclePreStopExec {
  /**
   * @schema TenantSpecLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePreStopExec(obj: TenantSpecLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePreStopHttpGet
 */
export interface TenantSpecLifecyclePreStopHttpGet {
  /**
   * @schema TenantSpecLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecLifecyclePreStopHttpGet#port
   */
  readonly port: TenantSpecLifecyclePreStopHttpGetPort;

  /**
   * @schema TenantSpecLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePreStopHttpGet(obj: TenantSpecLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePreStopTcpSocket
 */
export interface TenantSpecLifecyclePreStopTcpSocket {
  /**
   * @schema TenantSpecLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecLifecyclePreStopTcpSocket#port
   */
  readonly port: TenantSpecLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePreStopTcpSocket(obj: TenantSpecLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLivenessHttpGetHttpHeaders
 */
export interface TenantSpecLivenessHttpGetHttpHeaders {
  /**
   * @schema TenantSpecLivenessHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecLivenessHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecLivenessHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLivenessHttpGetHttpHeaders(obj: TenantSpecLivenessHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLivenessHttpGetPort
 */
export class TenantSpecLivenessHttpGetPort {
  public static fromNumber(value: number): TenantSpecLivenessHttpGetPort {
    return new TenantSpecLivenessHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecLivenessHttpGetPort {
    return new TenantSpecLivenessHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecLivenessTcpSocketPort
 */
export class TenantSpecLivenessTcpSocketPort {
  public static fromNumber(value: number): TenantSpecLivenessTcpSocketPort {
    return new TenantSpecLivenessTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecLivenessTcpSocketPort {
    return new TenantSpecLivenessTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsAffinityNodeAffinity
 */
export interface TenantSpecPoolsAffinityNodeAffinity {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinity(obj: TenantSpecPoolsAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinity
 */
export interface TenantSpecPoolsAffinityPodAffinity {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinity(obj: TenantSpecPoolsAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinity
 */
export interface TenantSpecPoolsAffinityPodAntiAffinity {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinity(obj: TenantSpecPoolsAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsContainerSecurityContextCapabilities
 */
export interface TenantSpecPoolsContainerSecurityContextCapabilities {
  /**
   * @schema TenantSpecPoolsContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema TenantSpecPoolsContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsContainerSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsContainerSecurityContextCapabilities(obj: TenantSpecPoolsContainerSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsContainerSecurityContextSeLinuxOptions
 */
export interface TenantSpecPoolsContainerSecurityContextSeLinuxOptions {
  /**
   * @schema TenantSpecPoolsContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TenantSpecPoolsContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TenantSpecPoolsContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TenantSpecPoolsContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsContainerSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsContainerSecurityContextSeLinuxOptions(obj: TenantSpecPoolsContainerSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsContainerSecurityContextSeccompProfile
 */
export interface TenantSpecPoolsContainerSecurityContextSeccompProfile {
  /**
   * @schema TenantSpecPoolsContainerSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TenantSpecPoolsContainerSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsContainerSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsContainerSecurityContextSeccompProfile(obj: TenantSpecPoolsContainerSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsContainerSecurityContextWindowsOptions
 */
export interface TenantSpecPoolsContainerSecurityContextWindowsOptions {
  /**
   * @schema TenantSpecPoolsContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TenantSpecPoolsContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TenantSpecPoolsContainerSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TenantSpecPoolsContainerSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsContainerSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsContainerSecurityContextWindowsOptions(obj: TenantSpecPoolsContainerSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsResourcesClaims
 */
export interface TenantSpecPoolsResourcesClaims {
  /**
   * @schema TenantSpecPoolsResourcesClaims#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsResourcesClaims(obj: TenantSpecPoolsResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsResourcesLimits
 */
export class TenantSpecPoolsResourcesLimits {
  public static fromNumber(value: number): TenantSpecPoolsResourcesLimits {
    return new TenantSpecPoolsResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecPoolsResourcesLimits {
    return new TenantSpecPoolsResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsResourcesRequests
 */
export class TenantSpecPoolsResourcesRequests {
  public static fromNumber(value: number): TenantSpecPoolsResourcesRequests {
    return new TenantSpecPoolsResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecPoolsResourcesRequests {
    return new TenantSpecPoolsResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsSecurityContextSeLinuxOptions
 */
export interface TenantSpecPoolsSecurityContextSeLinuxOptions {
  /**
   * @schema TenantSpecPoolsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TenantSpecPoolsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TenantSpecPoolsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TenantSpecPoolsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsSecurityContextSeLinuxOptions(obj: TenantSpecPoolsSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsSecurityContextSeccompProfile
 */
export interface TenantSpecPoolsSecurityContextSeccompProfile {
  /**
   * @schema TenantSpecPoolsSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TenantSpecPoolsSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsSecurityContextSeccompProfile(obj: TenantSpecPoolsSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsSecurityContextSysctls
 */
export interface TenantSpecPoolsSecurityContextSysctls {
  /**
   * @schema TenantSpecPoolsSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecPoolsSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsSecurityContextSysctls(obj: TenantSpecPoolsSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsSecurityContextWindowsOptions
 */
export interface TenantSpecPoolsSecurityContextWindowsOptions {
  /**
   * @schema TenantSpecPoolsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TenantSpecPoolsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TenantSpecPoolsSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TenantSpecPoolsSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsSecurityContextWindowsOptions(obj: TenantSpecPoolsSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsTopologySpreadConstraintsLabelSelector
 */
export interface TenantSpecPoolsTopologySpreadConstraintsLabelSelector {
  /**
   * @schema TenantSpecPoolsTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsTopologySpreadConstraintsLabelSelector(obj: TenantSpecPoolsTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateMetadata
 */
export interface TenantSpecPoolsVolumeClaimTemplateMetadata {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateMetadata(obj: TenantSpecPoolsVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpec
 */
export interface TenantSpecPoolsVolumeClaimTemplateSpec {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: TenantSpecPoolsVolumeClaimTemplateSpecDataSource;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#resources
   */
  readonly resources?: TenantSpecPoolsVolumeClaimTemplateSpecResources;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#selector
   */
  readonly selector?: TenantSpecPoolsVolumeClaimTemplateSpecSelector;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateSpec(obj: TenantSpecPoolsVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_TenantSpecPoolsVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_TenantSpecPoolsVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_TenantSpecPoolsVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateStatus
 */
export interface TenantSpecPoolsVolumeClaimTemplateStatus {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#allocatedResourceStatuses
   */
  readonly allocatedResourceStatuses?: { [key: string]: string };

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#allocatedResources
   */
  readonly allocatedResources?: { [key: string]: TenantSpecPoolsVolumeClaimTemplateStatusAllocatedResources };

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#capacity
   */
  readonly capacity?: { [key: string]: TenantSpecPoolsVolumeClaimTemplateStatusCapacity };

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#conditions
   */
  readonly conditions?: TenantSpecPoolsVolumeClaimTemplateStatusConditions[];

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#currentVolumeAttributesClassName
   */
  readonly currentVolumeAttributesClassName?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#modifyVolumeStatus
   */
  readonly modifyVolumeStatus?: TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatus#phase
   */
  readonly phase?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateStatus(obj: TenantSpecPoolsVolumeClaimTemplateStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'allocatedResourceStatuses': ((obj.allocatedResourceStatuses) === undefined) ? undefined : (Object.entries(obj.allocatedResourceStatuses).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'allocatedResources': ((obj.allocatedResources) === undefined) ? undefined : (Object.entries(obj.allocatedResources).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'capacity': ((obj.capacity) === undefined) ? undefined : (Object.entries(obj.capacity).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'conditions': obj.conditions?.map(y => toJson_TenantSpecPoolsVolumeClaimTemplateStatusConditions(y)),
    'currentVolumeAttributesClassName': obj.currentVolumeAttributesClassName,
    'modifyVolumeStatus': toJson_TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus(obj.modifyVolumeStatus),
    'phase': obj.phase,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecReadinessHttpGetHttpHeaders
 */
export interface TenantSpecReadinessHttpGetHttpHeaders {
  /**
   * @schema TenantSpecReadinessHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecReadinessHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecReadinessHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecReadinessHttpGetHttpHeaders(obj: TenantSpecReadinessHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecReadinessHttpGetPort
 */
export class TenantSpecReadinessHttpGetPort {
  public static fromNumber(value: number): TenantSpecReadinessHttpGetPort {
    return new TenantSpecReadinessHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecReadinessHttpGetPort {
    return new TenantSpecReadinessHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecReadinessTcpSocketPort
 */
export class TenantSpecReadinessTcpSocketPort {
  public static fromNumber(value: number): TenantSpecReadinessTcpSocketPort {
    return new TenantSpecReadinessTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecReadinessTcpSocketPort {
    return new TenantSpecReadinessTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersEnv
 */
export interface TenantSpecSideCarsContainersEnv {
  /**
   * @schema TenantSpecSideCarsContainersEnv#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainersEnv#value
   */
  readonly value?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnv#valueFrom
   */
  readonly valueFrom?: TenantSpecSideCarsContainersEnvValueFrom;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnv(obj: TenantSpecSideCarsContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_TenantSpecSideCarsContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvFrom
 */
export interface TenantSpecSideCarsContainersEnvFrom {
  /**
   * @schema TenantSpecSideCarsContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: TenantSpecSideCarsContainersEnvFromConfigMapRef;

  /**
   * @schema TenantSpecSideCarsContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvFrom#secretRef
   */
  readonly secretRef?: TenantSpecSideCarsContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvFrom(obj: TenantSpecSideCarsContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_TenantSpecSideCarsContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_TenantSpecSideCarsContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecycle
 */
export interface TenantSpecSideCarsContainersLifecycle {
  /**
   * @schema TenantSpecSideCarsContainersLifecycle#postStart
   */
  readonly postStart?: TenantSpecSideCarsContainersLifecyclePostStart;

  /**
   * @schema TenantSpecSideCarsContainersLifecycle#preStop
   */
  readonly preStop?: TenantSpecSideCarsContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecycle(obj: TenantSpecSideCarsContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_TenantSpecSideCarsContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_TenantSpecSideCarsContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLivenessProbe
 */
export interface TenantSpecSideCarsContainersLivenessProbe {
  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#exec
   */
  readonly exec?: TenantSpecSideCarsContainersLivenessProbeExec;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#grpc
   */
  readonly grpc?: TenantSpecSideCarsContainersLivenessProbeGrpc;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#httpGet
   */
  readonly httpGet?: TenantSpecSideCarsContainersLivenessProbeHttpGet;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: TenantSpecSideCarsContainersLivenessProbeTcpSocket;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLivenessProbe(obj: TenantSpecSideCarsContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecSideCarsContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecSideCarsContainersLivenessProbeGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecSideCarsContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecSideCarsContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersPorts
 */
export interface TenantSpecSideCarsContainersPorts {
  /**
   * @schema TenantSpecSideCarsContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * @schema TenantSpecSideCarsContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * @schema TenantSpecSideCarsContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * @schema TenantSpecSideCarsContainersPorts#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersPorts(obj: TenantSpecSideCarsContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersReadinessProbe
 */
export interface TenantSpecSideCarsContainersReadinessProbe {
  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#exec
   */
  readonly exec?: TenantSpecSideCarsContainersReadinessProbeExec;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#grpc
   */
  readonly grpc?: TenantSpecSideCarsContainersReadinessProbeGrpc;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#httpGet
   */
  readonly httpGet?: TenantSpecSideCarsContainersReadinessProbeHttpGet;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: TenantSpecSideCarsContainersReadinessProbeTcpSocket;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersReadinessProbe(obj: TenantSpecSideCarsContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecSideCarsContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecSideCarsContainersReadinessProbeGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecSideCarsContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecSideCarsContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersResizePolicy
 */
export interface TenantSpecSideCarsContainersResizePolicy {
  /**
   * @schema TenantSpecSideCarsContainersResizePolicy#resourceName
   */
  readonly resourceName: string;

  /**
   * @schema TenantSpecSideCarsContainersResizePolicy#restartPolicy
   */
  readonly restartPolicy: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersResizePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersResizePolicy(obj: TenantSpecSideCarsContainersResizePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceName': obj.resourceName,
    'restartPolicy': obj.restartPolicy,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersResources
 */
export interface TenantSpecSideCarsContainersResources {
  /**
   * @schema TenantSpecSideCarsContainersResources#claims
   */
  readonly claims?: TenantSpecSideCarsContainersResourcesClaims[];

  /**
   * @schema TenantSpecSideCarsContainersResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecSideCarsContainersResourcesLimits };

  /**
   * @schema TenantSpecSideCarsContainersResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecSideCarsContainersResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersResources(obj: TenantSpecSideCarsContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claims': obj.claims?.map(y => toJson_TenantSpecSideCarsContainersResourcesClaims(y)),
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersSecurityContext
 */
export interface TenantSpecSideCarsContainersSecurityContext {
  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#capabilities
   */
  readonly capabilities?: TenantSpecSideCarsContainersSecurityContextCapabilities;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: TenantSpecSideCarsContainersSecurityContextSeLinuxOptions;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: TenantSpecSideCarsContainersSecurityContextSeccompProfile;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: TenantSpecSideCarsContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersSecurityContext(obj: TenantSpecSideCarsContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_TenantSpecSideCarsContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_TenantSpecSideCarsContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_TenantSpecSideCarsContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_TenantSpecSideCarsContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersStartupProbe
 */
export interface TenantSpecSideCarsContainersStartupProbe {
  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#exec
   */
  readonly exec?: TenantSpecSideCarsContainersStartupProbeExec;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#grpc
   */
  readonly grpc?: TenantSpecSideCarsContainersStartupProbeGrpc;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#httpGet
   */
  readonly httpGet?: TenantSpecSideCarsContainersStartupProbeHttpGet;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: TenantSpecSideCarsContainersStartupProbeTcpSocket;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersStartupProbe(obj: TenantSpecSideCarsContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecSideCarsContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'grpc': toJson_TenantSpecSideCarsContainersStartupProbeGrpc(obj.grpc),
    'httpGet': toJson_TenantSpecSideCarsContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_TenantSpecSideCarsContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersVolumeDevices
 */
export interface TenantSpecSideCarsContainersVolumeDevices {
  /**
   * @schema TenantSpecSideCarsContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * @schema TenantSpecSideCarsContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersVolumeDevices(obj: TenantSpecSideCarsContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersVolumeMounts
 */
export interface TenantSpecSideCarsContainersVolumeMounts {
  /**
   * @schema TenantSpecSideCarsContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * @schema TenantSpecSideCarsContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * @schema TenantSpecSideCarsContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * @schema TenantSpecSideCarsContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersVolumeMounts(obj: TenantSpecSideCarsContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsResourcesClaims
 */
export interface TenantSpecSideCarsResourcesClaims {
  /**
   * @schema TenantSpecSideCarsResourcesClaims#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsResourcesClaims(obj: TenantSpecSideCarsResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsResourcesLimits
 */
export class TenantSpecSideCarsResourcesLimits {
  public static fromNumber(value: number): TenantSpecSideCarsResourcesLimits {
    return new TenantSpecSideCarsResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecSideCarsResourcesLimits {
    return new TenantSpecSideCarsResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsResourcesRequests
 */
export class TenantSpecSideCarsResourcesRequests {
  public static fromNumber(value: number): TenantSpecSideCarsResourcesRequests {
    return new TenantSpecSideCarsResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecSideCarsResourcesRequests {
    return new TenantSpecSideCarsResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesMetadata
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesMetadata {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesMetadata#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesMetadata(obj: TenantSpecSideCarsVolumeClaimTemplatesMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesSpec {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#dataSourceRef
   */
  readonly dataSourceRef?: TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: TenantSpecSideCarsVolumeClaimTemplatesSpecResources;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: TenantSpecSideCarsVolumeClaimTemplatesSpecSelector;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesSpec(obj: TenantSpecSideCarsVolumeClaimTemplatesSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecResources(obj.resources),
    'selector': toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesStatus {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#allocatedResourceStatuses
   */
  readonly allocatedResourceStatuses?: { [key: string]: string };

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#allocatedResources
   */
  readonly allocatedResources?: { [key: string]: TenantSpecSideCarsVolumeClaimTemplatesStatusAllocatedResources };

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity };

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: TenantSpecSideCarsVolumeClaimTemplatesStatusConditions[];

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#currentVolumeAttributesClassName
   */
  readonly currentVolumeAttributesClassName?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#modifyVolumeStatus
   */
  readonly modifyVolumeStatus?: TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesStatus(obj: TenantSpecSideCarsVolumeClaimTemplatesStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'allocatedResourceStatuses': ((obj.allocatedResourceStatuses) === undefined) ? undefined : (Object.entries(obj.allocatedResourceStatuses).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'allocatedResources': ((obj.allocatedResources) === undefined) ? undefined : (Object.entries(obj.allocatedResources).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'capacity': ((obj.capacity) === undefined) ? undefined : (Object.entries(obj.capacity).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'conditions': obj.conditions?.map(y => toJson_TenantSpecSideCarsVolumeClaimTemplatesStatusConditions(y)),
    'currentVolumeAttributesClassName': obj.currentVolumeAttributesClassName,
    'modifyVolumeStatus': toJson_TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus(obj.modifyVolumeStatus),
    'phase': obj.phase,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesAwsElasticBlockStore
 */
export interface TenantSpecSideCarsVolumesAwsElasticBlockStore {
  /**
   * @schema TenantSpecSideCarsVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * @schema TenantSpecSideCarsVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesAwsElasticBlockStore(obj: TenantSpecSideCarsVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesAzureDisk
 */
export interface TenantSpecSideCarsVolumesAzureDisk {
  /**
   * @schema TenantSpecSideCarsVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * @schema TenantSpecSideCarsVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * @schema TenantSpecSideCarsVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * @schema TenantSpecSideCarsVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * @schema TenantSpecSideCarsVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesAzureDisk(obj: TenantSpecSideCarsVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesAzureFile
 */
export interface TenantSpecSideCarsVolumesAzureFile {
  /**
   * @schema TenantSpecSideCarsVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * @schema TenantSpecSideCarsVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesAzureFile(obj: TenantSpecSideCarsVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesCephfs
 */
export interface TenantSpecSideCarsVolumesCephfs {
  /**
   * @schema TenantSpecSideCarsVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * @schema TenantSpecSideCarsVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecSideCarsVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * @schema TenantSpecSideCarsVolumesCephfs#secretRef
   */
  readonly secretRef?: TenantSpecSideCarsVolumesCephfsSecretRef;

  /**
   * @schema TenantSpecSideCarsVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesCephfs(obj: TenantSpecSideCarsVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_TenantSpecSideCarsVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesCinder
 */
export interface TenantSpecSideCarsVolumesCinder {
  /**
   * @schema TenantSpecSideCarsVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesCinder#secretRef
   */
  readonly secretRef?: TenantSpecSideCarsVolumesCinderSecretRef;

  /**
   * @schema TenantSpecSideCarsVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesCinder(obj: TenantSpecSideCarsVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecSideCarsVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesConfigMap
 */
export interface TenantSpecSideCarsVolumesConfigMap {
  /**
   * @schema TenantSpecSideCarsVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesConfigMap#items
   */
  readonly items?: TenantSpecSideCarsVolumesConfigMapItems[];

  /**
   * @schema TenantSpecSideCarsVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesConfigMap(obj: TenantSpecSideCarsVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TenantSpecSideCarsVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesCsi
 */
export interface TenantSpecSideCarsVolumesCsi {
  /**
   * @schema TenantSpecSideCarsVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * @schema TenantSpecSideCarsVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: TenantSpecSideCarsVolumesCsiNodePublishSecretRef;

  /**
   * @schema TenantSpecSideCarsVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesCsi(obj: TenantSpecSideCarsVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_TenantSpecSideCarsVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesDownwardApi
 */
export interface TenantSpecSideCarsVolumesDownwardApi {
  /**
   * @schema TenantSpecSideCarsVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesDownwardApi#items
   */
  readonly items?: TenantSpecSideCarsVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesDownwardApi(obj: TenantSpecSideCarsVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TenantSpecSideCarsVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEmptyDir
 */
export interface TenantSpecSideCarsVolumesEmptyDir {
  /**
   * @schema TenantSpecSideCarsVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * @schema TenantSpecSideCarsVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: TenantSpecSideCarsVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEmptyDir(obj: TenantSpecSideCarsVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEphemeral
 */
export interface TenantSpecSideCarsVolumesEphemeral {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeral(obj: TenantSpecSideCarsVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesFc
 */
export interface TenantSpecSideCarsVolumesFc {
  /**
   * @schema TenantSpecSideCarsVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * @schema TenantSpecSideCarsVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * @schema TenantSpecSideCarsVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesFc(obj: TenantSpecSideCarsVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesFlexVolume
 */
export interface TenantSpecSideCarsVolumesFlexVolume {
  /**
   * @schema TenantSpecSideCarsVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * @schema TenantSpecSideCarsVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * @schema TenantSpecSideCarsVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesFlexVolume#secretRef
   */
  readonly secretRef?: TenantSpecSideCarsVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesFlexVolume(obj: TenantSpecSideCarsVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecSideCarsVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesFlocker
 */
export interface TenantSpecSideCarsVolumesFlocker {
  /**
   * @schema TenantSpecSideCarsVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesFlocker(obj: TenantSpecSideCarsVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesGcePersistentDisk
 */
export interface TenantSpecSideCarsVolumesGcePersistentDisk {
  /**
   * @schema TenantSpecSideCarsVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * @schema TenantSpecSideCarsVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * @schema TenantSpecSideCarsVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesGcePersistentDisk(obj: TenantSpecSideCarsVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesGitRepo
 */
export interface TenantSpecSideCarsVolumesGitRepo {
  /**
   * @schema TenantSpecSideCarsVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * @schema TenantSpecSideCarsVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * @schema TenantSpecSideCarsVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesGitRepo(obj: TenantSpecSideCarsVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesGlusterfs
 */
export interface TenantSpecSideCarsVolumesGlusterfs {
  /**
   * @schema TenantSpecSideCarsVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * @schema TenantSpecSideCarsVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecSideCarsVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesGlusterfs(obj: TenantSpecSideCarsVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesHostPath
 */
export interface TenantSpecSideCarsVolumesHostPath {
  /**
   * @schema TenantSpecSideCarsVolumesHostPath#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecSideCarsVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesHostPath(obj: TenantSpecSideCarsVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesIscsi
 */
export interface TenantSpecSideCarsVolumesIscsi {
  /**
   * @schema TenantSpecSideCarsVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#secretRef
   */
  readonly secretRef?: TenantSpecSideCarsVolumesIscsiSecretRef;

  /**
   * @schema TenantSpecSideCarsVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesIscsi(obj: TenantSpecSideCarsVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecSideCarsVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesNfs
 */
export interface TenantSpecSideCarsVolumesNfs {
  /**
   * @schema TenantSpecSideCarsVolumesNfs#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecSideCarsVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesNfs(obj: TenantSpecSideCarsVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesPersistentVolumeClaim
 */
export interface TenantSpecSideCarsVolumesPersistentVolumeClaim {
  /**
   * @schema TenantSpecSideCarsVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * @schema TenantSpecSideCarsVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesPersistentVolumeClaim(obj: TenantSpecSideCarsVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesPhotonPersistentDisk
 */
export interface TenantSpecSideCarsVolumesPhotonPersistentDisk {
  /**
   * @schema TenantSpecSideCarsVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesPhotonPersistentDisk(obj: TenantSpecSideCarsVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesPortworxVolume
 */
export interface TenantSpecSideCarsVolumesPortworxVolume {
  /**
   * @schema TenantSpecSideCarsVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesPortworxVolume(obj: TenantSpecSideCarsVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjected
 */
export interface TenantSpecSideCarsVolumesProjected {
  /**
   * @schema TenantSpecSideCarsVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesProjected#sources
   */
  readonly sources?: TenantSpecSideCarsVolumesProjectedSources[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjected(obj: TenantSpecSideCarsVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_TenantSpecSideCarsVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesQuobyte
 */
export interface TenantSpecSideCarsVolumesQuobyte {
  /**
   * @schema TenantSpecSideCarsVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * @schema TenantSpecSideCarsVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * @schema TenantSpecSideCarsVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * @schema TenantSpecSideCarsVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * @schema TenantSpecSideCarsVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesQuobyte(obj: TenantSpecSideCarsVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesRbd
 */
export interface TenantSpecSideCarsVolumesRbd {
  /**
   * @schema TenantSpecSideCarsVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesRbd#image
   */
  readonly image: string;

  /**
   * @schema TenantSpecSideCarsVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * @schema TenantSpecSideCarsVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * @schema TenantSpecSideCarsVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * @schema TenantSpecSideCarsVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesRbd#secretRef
   */
  readonly secretRef?: TenantSpecSideCarsVolumesRbdSecretRef;

  /**
   * @schema TenantSpecSideCarsVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesRbd(obj: TenantSpecSideCarsVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecSideCarsVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesScaleIo
 */
export interface TenantSpecSideCarsVolumesScaleIo {
  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#secretRef
   */
  readonly secretRef: TenantSpecSideCarsVolumesScaleIoSecretRef;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * @schema TenantSpecSideCarsVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesScaleIo(obj: TenantSpecSideCarsVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecSideCarsVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesSecret
 */
export interface TenantSpecSideCarsVolumesSecret {
  /**
   * @schema TenantSpecSideCarsVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesSecret#items
   */
  readonly items?: TenantSpecSideCarsVolumesSecretItems[];

  /**
   * @schema TenantSpecSideCarsVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesSecret(obj: TenantSpecSideCarsVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_TenantSpecSideCarsVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesStorageos
 */
export interface TenantSpecSideCarsVolumesStorageos {
  /**
   * @schema TenantSpecSideCarsVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesStorageos#secretRef
   */
  readonly secretRef?: TenantSpecSideCarsVolumesStorageosSecretRef;

  /**
   * @schema TenantSpecSideCarsVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesStorageos(obj: TenantSpecSideCarsVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_TenantSpecSideCarsVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesVsphereVolume
 */
export interface TenantSpecSideCarsVolumesVsphereVolume {
  /**
   * @schema TenantSpecSideCarsVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * @schema TenantSpecSideCarsVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * @schema TenantSpecSideCarsVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesVsphereVolume(obj: TenantSpecSideCarsVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecStartupHttpGetHttpHeaders
 */
export interface TenantSpecStartupHttpGetHttpHeaders {
  /**
   * @schema TenantSpecStartupHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecStartupHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecStartupHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecStartupHttpGetHttpHeaders(obj: TenantSpecStartupHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecStartupHttpGetPort
 */
export class TenantSpecStartupHttpGetPort {
  public static fromNumber(value: number): TenantSpecStartupHttpGetPort {
    return new TenantSpecStartupHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecStartupHttpGetPort {
    return new TenantSpecStartupHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecStartupTcpSocketPort
 */
export class TenantSpecStartupTcpSocketPort {
  public static fromNumber(value: number): TenantSpecStartupTcpSocketPort {
    return new TenantSpecStartupTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecStartupTcpSocketPort {
    return new TenantSpecStartupTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecAdditionalVolumesDownwardApiItemsFieldRef
 */
export interface TenantSpecAdditionalVolumesDownwardApiItemsFieldRef {
  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesDownwardApiItemsFieldRef(obj: TenantSpecAdditionalVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef
 */
export interface TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef(obj: TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle#labelSelector
   */
  readonly labelSelector?: TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle#optional
   */
  readonly optional?: boolean;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle#signerName
   */
  readonly signerName?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle(obj: TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj.labelSelector),
    'name': obj.name,
    'optional': obj.optional,
    'path': obj.path,
    'signerName': obj.signerName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMap
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesConfigMap {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesConfigMap(obj: TenantSpecAdditionalVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApi
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesDownwardApi {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApi(obj: TenantSpecAdditionalVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesSecret
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesSecret {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesSecret#items
   */
  readonly items?: TenantSpecAdditionalVolumesProjectedSourcesSecretItems[];

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesSecret(obj: TenantSpecAdditionalVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TenantSpecAdditionalVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken(obj: TenantSpecAdditionalVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecEnvValueFromResourceFieldRefDivisor
 */
export class TenantSpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersEnvValueFromConfigMapKeyRef
 */
export interface TenantSpecInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema TenantSpecInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvValueFromConfigMapKeyRef(obj: TenantSpecInitContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvValueFromFieldRef
 */
export interface TenantSpecInitContainersEnvValueFromFieldRef {
  /**
   * @schema TenantSpecInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvValueFromFieldRef(obj: TenantSpecInitContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvValueFromResourceFieldRef
 */
export interface TenantSpecInitContainersEnvValueFromResourceFieldRef {
  /**
   * @schema TenantSpecInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecInitContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema TenantSpecInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvValueFromResourceFieldRef(obj: TenantSpecInitContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvValueFromSecretKeyRef
 */
export interface TenantSpecInitContainersEnvValueFromSecretKeyRef {
  /**
   * @schema TenantSpecInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecInitContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersEnvValueFromSecretKeyRef(obj: TenantSpecInitContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePostStartExec
 */
export interface TenantSpecInitContainersLifecyclePostStartExec {
  /**
   * @schema TenantSpecInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePostStartExec(obj: TenantSpecInitContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePostStartHttpGet
 */
export interface TenantSpecInitContainersLifecyclePostStartHttpGet {
  /**
   * @schema TenantSpecInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: TenantSpecInitContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePostStartHttpGet(obj: TenantSpecInitContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePostStartSleep
 */
export interface TenantSpecInitContainersLifecyclePostStartSleep {
  /**
   * @schema TenantSpecInitContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePostStartSleep(obj: TenantSpecInitContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePostStartTcpSocket
 */
export interface TenantSpecInitContainersLifecyclePostStartTcpSocket {
  /**
   * @schema TenantSpecInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: TenantSpecInitContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePostStartTcpSocket(obj: TenantSpecInitContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePreStopExec
 */
export interface TenantSpecInitContainersLifecyclePreStopExec {
  /**
   * @schema TenantSpecInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePreStopExec(obj: TenantSpecInitContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePreStopHttpGet
 */
export interface TenantSpecInitContainersLifecyclePreStopHttpGet {
  /**
   * @schema TenantSpecInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: TenantSpecInitContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePreStopHttpGet(obj: TenantSpecInitContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePreStopSleep
 */
export interface TenantSpecInitContainersLifecyclePreStopSleep {
  /**
   * @schema TenantSpecInitContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePreStopSleep(obj: TenantSpecInitContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePreStopTcpSocket
 */
export interface TenantSpecInitContainersLifecyclePreStopTcpSocket {
  /**
   * @schema TenantSpecInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: TenantSpecInitContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePreStopTcpSocket(obj: TenantSpecInitContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders(obj: TenantSpecInitContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLivenessProbeHttpGetPort
 */
export class TenantSpecInitContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): TenantSpecInitContainersLivenessProbeHttpGetPort {
    return new TenantSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersLivenessProbeHttpGetPort {
    return new TenantSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersLivenessProbeTcpSocketPort
 */
export class TenantSpecInitContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): TenantSpecInitContainersLivenessProbeTcpSocketPort {
    return new TenantSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersLivenessProbeTcpSocketPort {
    return new TenantSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders(obj: TenantSpecInitContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersReadinessProbeHttpGetPort
 */
export class TenantSpecInitContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): TenantSpecInitContainersReadinessProbeHttpGetPort {
    return new TenantSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersReadinessProbeHttpGetPort {
    return new TenantSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersReadinessProbeTcpSocketPort
 */
export class TenantSpecInitContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): TenantSpecInitContainersReadinessProbeTcpSocketPort {
    return new TenantSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersReadinessProbeTcpSocketPort {
    return new TenantSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface TenantSpecInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema TenantSpecInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersStartupProbeHttpGetHttpHeaders(obj: TenantSpecInitContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersStartupProbeHttpGetPort
 */
export class TenantSpecInitContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): TenantSpecInitContainersStartupProbeHttpGetPort {
    return new TenantSpecInitContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersStartupProbeHttpGetPort {
    return new TenantSpecInitContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersStartupProbeTcpSocketPort
 */
export class TenantSpecInitContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): TenantSpecInitContainersStartupProbeTcpSocketPort {
    return new TenantSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersStartupProbeTcpSocketPort {
    return new TenantSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesEnvValueFromConfigMapKeyRef
 */
export interface TenantSpecKesEnvValueFromConfigMapKeyRef {
  /**
   * @schema TenantSpecKesEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecKesEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecKesEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesEnvValueFromConfigMapKeyRef(obj: TenantSpecKesEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesEnvValueFromFieldRef
 */
export interface TenantSpecKesEnvValueFromFieldRef {
  /**
   * @schema TenantSpecKesEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecKesEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecKesEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesEnvValueFromFieldRef(obj: TenantSpecKesEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesEnvValueFromResourceFieldRef
 */
export interface TenantSpecKesEnvValueFromResourceFieldRef {
  /**
   * @schema TenantSpecKesEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecKesEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecKesEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema TenantSpecKesEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecKesEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesEnvValueFromResourceFieldRef(obj: TenantSpecKesEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesEnvValueFromSecretKeyRef
 */
export interface TenantSpecKesEnvValueFromSecretKeyRef {
  /**
   * @schema TenantSpecKesEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecKesEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecKesEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesEnvValueFromSecretKeyRef(obj: TenantSpecKesEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: TenantSpecKesTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePostStartHttpGetHttpHeaders
 */
export interface TenantSpecLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema TenantSpecLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePostStartHttpGetHttpHeaders(obj: TenantSpecLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePostStartHttpGetPort
 */
export class TenantSpecLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): TenantSpecLifecyclePostStartHttpGetPort {
    return new TenantSpecLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecLifecyclePostStartHttpGetPort {
    return new TenantSpecLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecLifecyclePostStartTcpSocketPort
 */
export class TenantSpecLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): TenantSpecLifecyclePostStartTcpSocketPort {
    return new TenantSpecLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecLifecyclePostStartTcpSocketPort {
    return new TenantSpecLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecLifecyclePreStopHttpGetHttpHeaders
 */
export interface TenantSpecLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema TenantSpecLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecLifecyclePreStopHttpGetHttpHeaders(obj: TenantSpecLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecLifecyclePreStopHttpGetPort
 */
export class TenantSpecLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): TenantSpecLifecyclePreStopHttpGetPort {
    return new TenantSpecLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecLifecyclePreStopHttpGetPort {
    return new TenantSpecLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecLifecyclePreStopTcpSocketPort
 */
export class TenantSpecLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): TenantSpecLifecyclePreStopTcpSocketPort {
    return new TenantSpecLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecLifecyclePreStopTcpSocketPort {
    return new TenantSpecLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: TenantSpecPoolsTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSource
 */
export interface TenantSpecPoolsVolumeClaimTemplateSpecDataSource {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateSpecDataSource(obj: TenantSpecPoolsVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef
 */
export interface TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef(obj: TenantSpecPoolsVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpecResources
 */
export interface TenantSpecPoolsVolumeClaimTemplateSpecResources {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecPoolsVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecPoolsVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateSpecResources(obj: TenantSpecPoolsVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpecSelector
 */
export interface TenantSpecPoolsVolumeClaimTemplateSpecSelector {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateSpecSelector(obj: TenantSpecPoolsVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateStatusAllocatedResources
 */
export class TenantSpecPoolsVolumeClaimTemplateStatusAllocatedResources {
  public static fromNumber(value: number): TenantSpecPoolsVolumeClaimTemplateStatusAllocatedResources {
    return new TenantSpecPoolsVolumeClaimTemplateStatusAllocatedResources(value);
  }
  public static fromString(value: string): TenantSpecPoolsVolumeClaimTemplateStatusAllocatedResources {
    return new TenantSpecPoolsVolumeClaimTemplateStatusAllocatedResources(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateStatusCapacity
 */
export class TenantSpecPoolsVolumeClaimTemplateStatusCapacity {
  public static fromNumber(value: number): TenantSpecPoolsVolumeClaimTemplateStatusCapacity {
    return new TenantSpecPoolsVolumeClaimTemplateStatusCapacity(value);
  }
  public static fromString(value: string): TenantSpecPoolsVolumeClaimTemplateStatusCapacity {
    return new TenantSpecPoolsVolumeClaimTemplateStatusCapacity(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateStatusConditions
 */
export interface TenantSpecPoolsVolumeClaimTemplateStatusConditions {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusConditions#message
   */
  readonly message?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusConditions#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateStatusConditions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateStatusConditions(obj: TenantSpecPoolsVolumeClaimTemplateStatusConditions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'lastProbeTime': obj.lastProbeTime?.toISOString(),
    'lastTransitionTime': obj.lastTransitionTime?.toISOString(),
    'message': obj.message,
    'reason': obj.reason,
    'status': obj.status,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus
 */
export interface TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus#status
   */
  readonly status: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus#targetVolumeAttributesClassName
   */
  readonly targetVolumeAttributesClassName?: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus(obj: TenantSpecPoolsVolumeClaimTemplateStatusModifyVolumeStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'status': obj.status,
    'targetVolumeAttributesClassName': obj.targetVolumeAttributesClassName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvValueFrom
 */
export interface TenantSpecSideCarsContainersEnvValueFrom {
  /**
   * @schema TenantSpecSideCarsContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: TenantSpecSideCarsContainersEnvValueFromFieldRef;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecSideCarsContainersEnvValueFromResourceFieldRef;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: TenantSpecSideCarsContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvValueFrom(obj: TenantSpecSideCarsContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_TenantSpecSideCarsContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_TenantSpecSideCarsContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_TenantSpecSideCarsContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvFromConfigMapRef
 */
export interface TenantSpecSideCarsContainersEnvFromConfigMapRef {
  /**
   * @schema TenantSpecSideCarsContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvFromConfigMapRef(obj: TenantSpecSideCarsContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvFromSecretRef
 */
export interface TenantSpecSideCarsContainersEnvFromSecretRef {
  /**
   * @schema TenantSpecSideCarsContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvFromSecretRef(obj: TenantSpecSideCarsContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStart
 */
export interface TenantSpecSideCarsContainersLifecyclePostStart {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStart#exec
   */
  readonly exec?: TenantSpecSideCarsContainersLifecyclePostStartExec;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: TenantSpecSideCarsContainersLifecyclePostStartHttpGet;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStart#sleep
   */
  readonly sleep?: TenantSpecSideCarsContainersLifecyclePostStartSleep;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: TenantSpecSideCarsContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePostStart(obj: TenantSpecSideCarsContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecSideCarsContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_TenantSpecSideCarsContainersLifecyclePostStartHttpGet(obj.httpGet),
    'sleep': toJson_TenantSpecSideCarsContainersLifecyclePostStartSleep(obj.sleep),
    'tcpSocket': toJson_TenantSpecSideCarsContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStop
 */
export interface TenantSpecSideCarsContainersLifecyclePreStop {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStop#exec
   */
  readonly exec?: TenantSpecSideCarsContainersLifecyclePreStopExec;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: TenantSpecSideCarsContainersLifecyclePreStopHttpGet;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStop#sleep
   */
  readonly sleep?: TenantSpecSideCarsContainersLifecyclePreStopSleep;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: TenantSpecSideCarsContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePreStop(obj: TenantSpecSideCarsContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_TenantSpecSideCarsContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_TenantSpecSideCarsContainersLifecyclePreStopHttpGet(obj.httpGet),
    'sleep': toJson_TenantSpecSideCarsContainersLifecyclePreStopSleep(obj.sleep),
    'tcpSocket': toJson_TenantSpecSideCarsContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLivenessProbeExec
 */
export interface TenantSpecSideCarsContainersLivenessProbeExec {
  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLivenessProbeExec(obj: TenantSpecSideCarsContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLivenessProbeGrpc
 */
export interface TenantSpecSideCarsContainersLivenessProbeGrpc {
  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLivenessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLivenessProbeGrpc(obj: TenantSpecSideCarsContainersLivenessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLivenessProbeHttpGet
 */
export interface TenantSpecSideCarsContainersLivenessProbeHttpGet {
  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeHttpGet#port
   */
  readonly port: TenantSpecSideCarsContainersLivenessProbeHttpGetPort;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLivenessProbeHttpGet(obj: TenantSpecSideCarsContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLivenessProbeTcpSocket
 */
export interface TenantSpecSideCarsContainersLivenessProbeTcpSocket {
  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeTcpSocket#port
   */
  readonly port: TenantSpecSideCarsContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLivenessProbeTcpSocket(obj: TenantSpecSideCarsContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersReadinessProbeExec
 */
export interface TenantSpecSideCarsContainersReadinessProbeExec {
  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersReadinessProbeExec(obj: TenantSpecSideCarsContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersReadinessProbeGrpc
 */
export interface TenantSpecSideCarsContainersReadinessProbeGrpc {
  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersReadinessProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersReadinessProbeGrpc(obj: TenantSpecSideCarsContainersReadinessProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersReadinessProbeHttpGet
 */
export interface TenantSpecSideCarsContainersReadinessProbeHttpGet {
  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeHttpGet#port
   */
  readonly port: TenantSpecSideCarsContainersReadinessProbeHttpGetPort;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersReadinessProbeHttpGet(obj: TenantSpecSideCarsContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersReadinessProbeTcpSocket
 */
export interface TenantSpecSideCarsContainersReadinessProbeTcpSocket {
  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeTcpSocket#port
   */
  readonly port: TenantSpecSideCarsContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersReadinessProbeTcpSocket(obj: TenantSpecSideCarsContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersResourcesClaims
 */
export interface TenantSpecSideCarsContainersResourcesClaims {
  /**
   * @schema TenantSpecSideCarsContainersResourcesClaims#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersResourcesClaims' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersResourcesClaims(obj: TenantSpecSideCarsContainersResourcesClaims | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersResourcesLimits
 */
export class TenantSpecSideCarsContainersResourcesLimits {
  public static fromNumber(value: number): TenantSpecSideCarsContainersResourcesLimits {
    return new TenantSpecSideCarsContainersResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersResourcesLimits {
    return new TenantSpecSideCarsContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersResourcesRequests
 */
export class TenantSpecSideCarsContainersResourcesRequests {
  public static fromNumber(value: number): TenantSpecSideCarsContainersResourcesRequests {
    return new TenantSpecSideCarsContainersResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersResourcesRequests {
    return new TenantSpecSideCarsContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersSecurityContextCapabilities
 */
export interface TenantSpecSideCarsContainersSecurityContextCapabilities {
  /**
   * @schema TenantSpecSideCarsContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersSecurityContextCapabilities(obj: TenantSpecSideCarsContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersSecurityContextSeLinuxOptions
 */
export interface TenantSpecSideCarsContainersSecurityContextSeLinuxOptions {
  /**
   * @schema TenantSpecSideCarsContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersSecurityContextSeLinuxOptions(obj: TenantSpecSideCarsContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersSecurityContextSeccompProfile
 */
export interface TenantSpecSideCarsContainersSecurityContextSeccompProfile {
  /**
   * @schema TenantSpecSideCarsContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersSecurityContextSeccompProfile(obj: TenantSpecSideCarsContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersSecurityContextWindowsOptions
 */
export interface TenantSpecSideCarsContainersSecurityContextWindowsOptions {
  /**
   * @schema TenantSpecSideCarsContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema TenantSpecSideCarsContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersSecurityContextWindowsOptions(obj: TenantSpecSideCarsContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersStartupProbeExec
 */
export interface TenantSpecSideCarsContainersStartupProbeExec {
  /**
   * @schema TenantSpecSideCarsContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersStartupProbeExec(obj: TenantSpecSideCarsContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersStartupProbeGrpc
 */
export interface TenantSpecSideCarsContainersStartupProbeGrpc {
  /**
   * @schema TenantSpecSideCarsContainersStartupProbeGrpc#port
   */
  readonly port: number;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbeGrpc#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersStartupProbeGrpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersStartupProbeGrpc(obj: TenantSpecSideCarsContainersStartupProbeGrpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersStartupProbeHttpGet
 */
export interface TenantSpecSideCarsContainersStartupProbeHttpGet {
  /**
   * @schema TenantSpecSideCarsContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecSideCarsContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbeHttpGet#port
   */
  readonly port: TenantSpecSideCarsContainersStartupProbeHttpGetPort;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersStartupProbeHttpGet(obj: TenantSpecSideCarsContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersStartupProbeTcpSocket
 */
export interface TenantSpecSideCarsContainersStartupProbeTcpSocket {
  /**
   * @schema TenantSpecSideCarsContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbeTcpSocket#port
   */
  readonly port: TenantSpecSideCarsContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersStartupProbeTcpSocket(obj: TenantSpecSideCarsContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource(obj: TenantSpecSideCarsVolumeClaimTemplatesSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef(obj: TenantSpecSideCarsVolumeClaimTemplatesSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecResources
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesSpecResources {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits };

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecResources(obj: TenantSpecSideCarsVolumeClaimTemplatesSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecSelector
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesSpecSelector {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecSelector(obj: TenantSpecSideCarsVolumeClaimTemplatesSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusAllocatedResources
 */
export class TenantSpecSideCarsVolumeClaimTemplatesStatusAllocatedResources {
  public static fromNumber(value: number): TenantSpecSideCarsVolumeClaimTemplatesStatusAllocatedResources {
    return new TenantSpecSideCarsVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumeClaimTemplatesStatusAllocatedResources {
    return new TenantSpecSideCarsVolumeClaimTemplatesStatusAllocatedResources(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity
 */
export class TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity {
  public static fromNumber(value: number): TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity {
    return new TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity {
    return new TenantSpecSideCarsVolumeClaimTemplatesStatusCapacity(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusConditions
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesStatusConditions {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesStatusConditions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesStatusConditions(obj: TenantSpecSideCarsVolumeClaimTemplatesStatusConditions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'lastProbeTime': obj.lastProbeTime?.toISOString(),
    'lastTransitionTime': obj.lastTransitionTime?.toISOString(),
    'message': obj.message,
    'reason': obj.reason,
    'status': obj.status,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus#status
   */
  readonly status: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus#targetVolumeAttributesClassName
   */
  readonly targetVolumeAttributesClassName?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus(obj: TenantSpecSideCarsVolumeClaimTemplatesStatusModifyVolumeStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'status': obj.status,
    'targetVolumeAttributesClassName': obj.targetVolumeAttributesClassName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesCephfsSecretRef
 */
export interface TenantSpecSideCarsVolumesCephfsSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesCephfsSecretRef(obj: TenantSpecSideCarsVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesCinderSecretRef
 */
export interface TenantSpecSideCarsVolumesCinderSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesCinderSecretRef(obj: TenantSpecSideCarsVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesConfigMapItems
 */
export interface TenantSpecSideCarsVolumesConfigMapItems {
  /**
   * @schema TenantSpecSideCarsVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesConfigMapItems(obj: TenantSpecSideCarsVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesCsiNodePublishSecretRef
 */
export interface TenantSpecSideCarsVolumesCsiNodePublishSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesCsiNodePublishSecretRef(obj: TenantSpecSideCarsVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesDownwardApiItems
 */
export interface TenantSpecSideCarsVolumesDownwardApiItems {
  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: TenantSpecSideCarsVolumesDownwardApiItemsFieldRef;

  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesDownwardApiItems(obj: TenantSpecSideCarsVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_TenantSpecSideCarsVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEmptyDirSizeLimit
 */
export class TenantSpecSideCarsVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): TenantSpecSideCarsVolumesEmptyDirSizeLimit {
    return new TenantSpecSideCarsVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumesEmptyDirSizeLimit {
    return new TenantSpecSideCarsVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata(obj.metadata),
    'spec': toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesFlexVolumeSecretRef
 */
export interface TenantSpecSideCarsVolumesFlexVolumeSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesFlexVolumeSecretRef(obj: TenantSpecSideCarsVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesIscsiSecretRef
 */
export interface TenantSpecSideCarsVolumesIscsiSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesIscsiSecretRef(obj: TenantSpecSideCarsVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSources
 */
export interface TenantSpecSideCarsVolumesProjectedSources {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSources#clusterTrustBundle
   */
  readonly clusterTrustBundle?: TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSources#configMap
   */
  readonly configMap?: TenantSpecSideCarsVolumesProjectedSourcesConfigMap;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: TenantSpecSideCarsVolumesProjectedSourcesDownwardApi;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSources#secret
   */
  readonly secret?: TenantSpecSideCarsVolumesProjectedSourcesSecret;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSources(obj: TenantSpecSideCarsVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterTrustBundle': toJson_TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle(obj.clusterTrustBundle),
    'configMap': toJson_TenantSpecSideCarsVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_TenantSpecSideCarsVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesRbdSecretRef
 */
export interface TenantSpecSideCarsVolumesRbdSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesRbdSecretRef(obj: TenantSpecSideCarsVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesScaleIoSecretRef
 */
export interface TenantSpecSideCarsVolumesScaleIoSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesScaleIoSecretRef(obj: TenantSpecSideCarsVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesSecretItems
 */
export interface TenantSpecSideCarsVolumesSecretItems {
  /**
   * @schema TenantSpecSideCarsVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesSecretItems(obj: TenantSpecSideCarsVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesStorageosSecretRef
 */
export interface TenantSpecSideCarsVolumesStorageosSecretRef {
  /**
   * @schema TenantSpecSideCarsVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesStorageosSecretRef(obj: TenantSpecSideCarsVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecAdditionalVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj: TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems(obj: TenantSpecAdditionalVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems(obj: TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesSecretItems
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesSecretItems {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesSecretItems(obj: TenantSpecAdditionalVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersEnvValueFromResourceFieldRefDivisor
 */
export class TenantSpecInitContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(obj: TenantSpecInitContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePostStartHttpGetPort
 */
export class TenantSpecInitContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): TenantSpecInitContainersLifecyclePostStartHttpGetPort {
    return new TenantSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersLifecyclePostStartHttpGetPort {
    return new TenantSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersLifecyclePostStartTcpSocketPort
 */
export class TenantSpecInitContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): TenantSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new TenantSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new TenantSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(obj: TenantSpecInitContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecInitContainersLifecyclePreStopHttpGetPort
 */
export class TenantSpecInitContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): TenantSpecInitContainersLifecyclePreStopHttpGetPort {
    return new TenantSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersLifecyclePreStopHttpGetPort {
    return new TenantSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecInitContainersLifecyclePreStopTcpSocketPort
 */
export class TenantSpecInitContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): TenantSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new TenantSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new TenantSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesEnvValueFromResourceFieldRefDivisor
 */
export class TenantSpecKesEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecKesEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecKesEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecKesEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecKesEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#matchLabelKeys
   */
  readonly matchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#mismatchLabelKeys
   */
  readonly mismatchLabelKeys?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'matchLabelKeys': obj.matchLabelKeys?.map(y => y),
    'mismatchLabelKeys': obj.mismatchLabelKeys?.map(y => y),
    'namespaceSelector': toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpecResourcesLimits
 */
export class TenantSpecPoolsVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): TenantSpecPoolsVolumeClaimTemplateSpecResourcesLimits {
    return new TenantSpecPoolsVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecPoolsVolumeClaimTemplateSpecResourcesLimits {
    return new TenantSpecPoolsVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpecResourcesRequests
 */
export class TenantSpecPoolsVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): TenantSpecPoolsVolumeClaimTemplateSpecResourcesRequests {
    return new TenantSpecPoolsVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecPoolsVolumeClaimTemplateSpecResourcesRequests {
    return new TenantSpecPoolsVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions(obj: TenantSpecPoolsVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef
 */
export interface TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef {
  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef(obj: TenantSpecSideCarsContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvValueFromFieldRef
 */
export interface TenantSpecSideCarsContainersEnvValueFromFieldRef {
  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvValueFromFieldRef(obj: TenantSpecSideCarsContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvValueFromResourceFieldRef
 */
export interface TenantSpecSideCarsContainersEnvValueFromResourceFieldRef {
  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvValueFromResourceFieldRef(obj: TenantSpecSideCarsContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvValueFromSecretKeyRef
 */
export interface TenantSpecSideCarsContainersEnvValueFromSecretKeyRef {
  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersEnvValueFromSecretKeyRef(obj: TenantSpecSideCarsContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStartExec
 */
export interface TenantSpecSideCarsContainersLifecyclePostStartExec {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePostStartExec(obj: TenantSpecSideCarsContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGet
 */
export interface TenantSpecSideCarsContainersLifecyclePostStartHttpGet {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGet#port
   */
  readonly port: TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePostStartHttpGet(obj: TenantSpecSideCarsContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStartSleep
 */
export interface TenantSpecSideCarsContainersLifecyclePostStartSleep {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePostStartSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePostStartSleep(obj: TenantSpecSideCarsContainersLifecyclePostStartSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStartTcpSocket
 */
export interface TenantSpecSideCarsContainersLifecyclePostStartTcpSocket {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePostStartTcpSocket(obj: TenantSpecSideCarsContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStopExec
 */
export interface TenantSpecSideCarsContainersLifecyclePreStopExec {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePreStopExec(obj: TenantSpecSideCarsContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGet
 */
export interface TenantSpecSideCarsContainersLifecyclePreStopHttpGet {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGet#port
   */
  readonly port: TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePreStopHttpGet(obj: TenantSpecSideCarsContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStopSleep
 */
export interface TenantSpecSideCarsContainersLifecyclePreStopSleep {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopSleep#seconds
   */
  readonly seconds: number;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePreStopSleep' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePreStopSleep(obj: TenantSpecSideCarsContainersLifecyclePreStopSleep | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'seconds': obj.seconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStopTcpSocket
 */
export interface TenantSpecSideCarsContainersLifecyclePreStopTcpSocket {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePreStopTcpSocket(obj: TenantSpecSideCarsContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders
 */
export interface TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders(obj: TenantSpecSideCarsContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLivenessProbeHttpGetPort
 */
export class TenantSpecSideCarsContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersLivenessProbeHttpGetPort {
    return new TenantSpecSideCarsContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersLivenessProbeHttpGetPort {
    return new TenantSpecSideCarsContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersLivenessProbeTcpSocketPort
 */
export class TenantSpecSideCarsContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersLivenessProbeTcpSocketPort {
    return new TenantSpecSideCarsContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersLivenessProbeTcpSocketPort {
    return new TenantSpecSideCarsContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders
 */
export interface TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders(obj: TenantSpecSideCarsContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersReadinessProbeHttpGetPort
 */
export class TenantSpecSideCarsContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersReadinessProbeHttpGetPort {
    return new TenantSpecSideCarsContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersReadinessProbeHttpGetPort {
    return new TenantSpecSideCarsContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersReadinessProbeTcpSocketPort
 */
export class TenantSpecSideCarsContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersReadinessProbeTcpSocketPort {
    return new TenantSpecSideCarsContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersReadinessProbeTcpSocketPort {
    return new TenantSpecSideCarsContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders
 */
export interface TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders {
  /**
   * @schema TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders(obj: TenantSpecSideCarsContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersStartupProbeHttpGetPort
 */
export class TenantSpecSideCarsContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersStartupProbeHttpGetPort {
    return new TenantSpecSideCarsContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersStartupProbeHttpGetPort {
    return new TenantSpecSideCarsContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersStartupProbeTcpSocketPort
 */
export class TenantSpecSideCarsContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersStartupProbeTcpSocketPort {
    return new TenantSpecSideCarsContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersStartupProbeTcpSocketPort {
    return new TenantSpecSideCarsContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits
 */
export class TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits {
  public static fromNumber(value: number): TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits {
    return new TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits {
    return new TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests
 */
export class TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests {
  public static fromNumber(value: number): TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests {
    return new TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests {
    return new TenantSpecSideCarsVolumeClaimTemplatesSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions(obj: TenantSpecSideCarsVolumeClaimTemplatesSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesDownwardApiItemsFieldRef
 */
export interface TenantSpecSideCarsVolumesDownwardApiItemsFieldRef {
  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesDownwardApiItemsFieldRef(obj: TenantSpecSideCarsVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef
 */
export interface TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef {
  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef(obj: TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'finalizers': obj.finalizers?.map(y => y),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#dataSourceRef
   */
  readonly dataSourceRef?: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#volumeAttributesClassName
   */
  readonly volumeAttributesClassName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'dataSourceRef': toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj.dataSourceRef),
    'resources': toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeAttributesClassName': obj.volumeAttributesClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle#labelSelector
   */
  readonly labelSelector?: TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle#optional
   */
  readonly optional?: boolean;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle#signerName
   */
  readonly signerName?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle(obj: TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj.labelSelector),
    'name': obj.name,
    'optional': obj.optional,
    'path': obj.path,
    'signerName': obj.signerName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMap
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesConfigMap {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems[];

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesConfigMap(obj: TenantSpecSideCarsVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApi
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesDownwardApi {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApi(obj: TenantSpecSideCarsVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesSecret
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesSecret {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesSecret#items
   */
  readonly items?: TenantSpecSideCarsVolumesProjectedSourcesSecretItems[];

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesSecret(obj: TenantSpecSideCarsVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_TenantSpecSideCarsVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken(obj: TenantSpecSideCarsVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: TenantSpecAdditionalVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(obj: TenantSpecAdditionalVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: TenantSpecKesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: TenantSpecKesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: TenantSpecPoolsAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: TenantSpecPoolsAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor
 */
export class TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor {
    return new TenantSpecSideCarsContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders(obj: TenantSpecSideCarsContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort
 */
export class TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort {
    return new TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort {
    return new TenantSpecSideCarsContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort
 */
export class TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort {
    return new TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort {
    return new TenantSpecSideCarsContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders(obj: TenantSpecSideCarsContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort
 */
export class TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort {
    return new TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort {
    return new TenantSpecSideCarsContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort
 */
export class TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort {
    return new TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort {
    return new TenantSpecSideCarsContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecSideCarsVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#kind
   */
  readonly kind: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#name
   */
  readonly name: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchExpressions
   */
  readonly matchExpressions?: TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[];

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector(obj: TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems(obj: TenantSpecSideCarsVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems(obj: TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesSecretItems
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesSecretItems {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesSecretItems(obj: TenantSpecSideCarsVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecAdditionalVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: TenantSpecKesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: TenantSpecPoolsAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: TenantSpecSideCarsVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions(obj: TenantSpecSideCarsVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new TenantSpecSideCarsVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

