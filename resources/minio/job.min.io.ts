// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema MinIOJob
 */
export class MinIoJob extends ApiObject {
  /**
   * Returns the apiVersion and kind for "MinIOJob"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'job.min.io/v1alpha1',
    kind: 'MinIOJob',
  }

  /**
   * Renders a Kubernetes manifest for "MinIOJob".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: MinIoJobProps = {}): any {
    return {
      ...MinIoJob.GVK,
      ...toJson_MinIoJobProps(props),
    };
  }

  /**
   * Defines a "MinIOJob" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: MinIoJobProps = {}) {
    super(scope, id, {
      ...MinIoJob.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...MinIoJob.GVK,
      ...toJson_MinIoJobProps(resolved),
    };
  }
}

/**
 * @schema MinIOJob
 */
export interface MinIoJobProps {
  /**
   * @schema MinIOJob#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema MinIOJob#spec
   */
  readonly spec?: MinIoJobSpec;

}

/**
 * Converts an object of type 'MinIoJobProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_MinIoJobProps(obj: MinIoJobProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_MinIoJobSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema MinIoJobSpec
 */
export interface MinIoJobSpec {
  /**
   * @schema MinIoJobSpec#commands
   */
  readonly commands: MinIoJobSpecCommands[];

  /**
   * @schema MinIoJobSpec#execution
   */
  readonly execution?: MinIoJobSpecExecution;

  /**
   * @schema MinIoJobSpec#failureStrategy
   */
  readonly failureStrategy?: MinIoJobSpecFailureStrategy;

  /**
   * @schema MinIoJobSpec#mcImage
   */
  readonly mcImage?: string;

  /**
   * @schema MinIoJobSpec#serviceAccountName
   */
  readonly serviceAccountName: string;

  /**
   * @schema MinIoJobSpec#tenant
   */
  readonly tenant: MinIoJobSpecTenant;

}

/**
 * Converts an object of type 'MinIoJobSpec' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_MinIoJobSpec(obj: MinIoJobSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'commands': obj.commands?.map(y => toJson_MinIoJobSpecCommands(y)),
    'execution': obj.execution,
    'failureStrategy': obj.failureStrategy,
    'mcImage': obj.mcImage,
    'serviceAccountName': obj.serviceAccountName,
    'tenant': toJson_MinIoJobSpecTenant(obj.tenant),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema MinIoJobSpecCommands
 */
export interface MinIoJobSpecCommands {
  /**
   * @schema MinIoJobSpecCommands#args
   */
  readonly args?: { [key: string]: string };

  /**
   * @schema MinIoJobSpecCommands#dependsOn
   */
  readonly dependsOn?: string[];

  /**
   * @schema MinIoJobSpecCommands#name
   */
  readonly name?: string;

  /**
   * @schema MinIoJobSpecCommands#op
   */
  readonly op: string;

}

/**
 * Converts an object of type 'MinIoJobSpecCommands' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_MinIoJobSpecCommands(obj: MinIoJobSpecCommands | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': ((obj.args) === undefined) ? undefined : (Object.entries(obj.args).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'dependsOn': obj.dependsOn?.map(y => y),
    'name': obj.name,
    'op': obj.op,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema MinIoJobSpecExecution
 */
export enum MinIoJobSpecExecution {
  /** parallel */
  PARALLEL = "parallel",
  /** sequential */
  SEQUENTIAL = "sequential",
}

/**
 * @schema MinIoJobSpecFailureStrategy
 */
export enum MinIoJobSpecFailureStrategy {
  /** continueOnFailure */
  CONTINUE_ON_FAILURE = "continueOnFailure",
  /** stopOnFailure */
  STOP_ON_FAILURE = "stopOnFailure",
}

/**
 * @schema MinIoJobSpecTenant
 */
export interface MinIoJobSpecTenant {
  /**
   * @schema MinIoJobSpecTenant#name
   */
  readonly name: string;

  /**
   * @schema MinIoJobSpecTenant#namespace
   */
  readonly namespace: string;

}

/**
 * Converts an object of type 'MinIoJobSpecTenant' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_MinIoJobSpecTenant(obj: MinIoJobSpecTenant | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

